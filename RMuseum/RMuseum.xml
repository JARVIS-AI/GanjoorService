<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RMuseum</name>
    </assembly>
    <members>
        <member name="T:RMuseum.Controllers.AppUserController">
            <summary>
            User login/logout/register/...
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.AppUserController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,RSecurityBackend.Services.IAppUserService,Microsoft.AspNetCore.Http.IHttpContextAccessor,RSecurityBackend.Services.IUserPermissionChecker,Microsoft.AspNetCore.Identity.UI.Services.IEmailSender,RSecurityBackend.Services.IImageFileService,RSecurityBackend.Services.ICaptchaService)">
            <summary>
            constructor
            </summary>
            <param name="configuration"></param>
            <param name="appUserService"></param>
            <param name="httpContextAccessor"></param>
            <param name="userPermissionChecker"></param>
            <param name="emailSender"></param>
            <param name="imageFileService"></param>
            <param name="captchaService"></param>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.Get(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get all published artifacts (including CoverImage info but not items info)
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController._GetUserVisibleArtifactStatusSet(System.Guid,System.Guid)">
            <summary>
            get list of artifact statuses user can see
            </summary>
            <param name="loggedOnUserId"></param>
            <param name="sessionId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserVisible(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get all artifacts visible by user (including CoverImage info but not items info)
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.Get(System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images)
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.RemoveArtifactHavingNoNoteAndBookmarks(System.Guid)">
            <summary>
            remove unpublished artifact having no notes and not bookmarked
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetByFriendlyUrlFilterItemsByTag(System.String,System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images) where its items are filteted by tag
            </summary>
            <param name="friendlyUrl"></param>
            <param name="tagFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetByFriendlyUrlFilterItemsByTag(System.String,System.String,System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images) where its items are filteted by tag
            </summary>
            <param name="friendlyUrl"></param>
            <param name="tagFriendlyUrl"></param>
            <param name="valueFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserVisible(System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images)
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserVisibleByFriendlyUrlFilterItemsByTag(System.String,System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images) where its items are filteted by tag
            </summary>
            <param name="friendlyUrl"></param>
            <param name="tagFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserVisibleByFriendlyUrlFilterItemsByTag(System.String,System.String,System.String)">
            <summary>
            gets specified publish artifact info (including CoverImage + images) where its items are filteted by tag
            </summary>
            <param name="friendlyUrl"></param>
            <param name="tagFriendlyUrl"></param>
            <param name="valueFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.Put(System.Guid,RMuseum.Models.Artifact.RArtifactMasterRecord)">
            <summary>
            edit artifactt master record (user should have additional permissions artifact:awaiting and artifact:publish to change status of artifact)
            </summary>
            <remarks>
            editing related collections such as images and attributed or complex properties such as CoverImage is ignored
            </remarks>
            <param name="id"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.SetArtifactCoverItemIndex(System.Guid,System.Int32)">
            <summary>
            Set Artifact Cover Item Index
            </summary>
            <param name="id"></param>
            <param name="itemIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetTagBundleByFiendlyUrl(System.String)">
            <summary>
            get tag bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.NewTag(RMuseum.Models.Artifact.RTag)">
            <summary>
            add new tag
            </summary>
            <param name="tag">only name is processed</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetTags(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get all tags
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.PutTag(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            edit tag
            </summary>
            <remarks>
            editable fields are limited
            </remarks>
            <param name="tagid"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.MoveTag(System.Guid,System.Guid,System.String)">
            <summary>
            changes order of tags based on their position in artifacts
            </summary>
            <param name="tagId"></param>
            <param name="artifactId"></param>
            <param name="upordown">up / down</param>
            <returns>the other tag which its Order got replaced with the input id</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.MoveTagInItem(System.Guid,System.Guid,System.String)">
            <summary>
            changes order of tags based on their position in artifact items
            </summary>
            <param name="tagId"></param>
            <param name="itemId"></param>
            <param name="upordown">up / down</param>
            <returns>the other tag which its Order got replaced with the input id</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetTagValueBundleByFiendlyUrl(System.String,System.String)">
            <summary>
            get tag value bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <param name="valueUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetTagValueByFriendlyUrl(System.Guid,System.String)">
            <summary>
            get tag value by frindly url
            </summary>
            <param name="tagId"></param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.NewArtifactTagValue(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add new tag value to artifact
            </summary>
            <param name="artifactId"></param>
            <param name="tag">only name is processed</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.PutAttributeValue(System.Guid,System.Boolean,RMuseum.Models.Artifact.RTagValue)">
            <summary>
            edit artifact attribute value
            </summary>
            <remarks>
            editable fields are limited
            </remarks>
            <param name="artifactid"></param>
            <param name="tagvalue"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.RemoveArtifactTagValue(System.Guid,System.Guid)">
            <summary>
            remove tag from artifact
            </summary>
            <param name="artifactId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.NewItemTagValue(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add new tag value to item
            </summary>
            <param name="itemId"></param>
            <param name="tag">only name is processed</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.PutItemTagValue(System.Guid,System.Boolean,RMuseum.Models.Artifact.RTagValue)">
            <summary>
            edit item attribute value
            </summary>
            <remarks>
            editable fields are limited
            </remarks>
            <param name="itemId"></param>
            <param name="tagvalue"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.RemoveItemTagValue(System.Guid,System.Guid)">
            <summary>
            remove tag from item
            </summary>
            <param name="itemId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.MoveTagValue(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            changes order of tag values based on their position in an artifact
            </summary>
            <param name="artifactId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>
            <param name="upordown">up / down</param>
            <returns>the other tag which its Order got replaced with the input id</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.MoveItemTagValue(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            changes order of tag values based on their position in an item
            </summary>
            <param name="itemId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>
            <param name="upordown">up / down</param>
            <returns>the other tag which its Order got replaced with the input id</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactItemByFrienlyUrl(System.String,System.String)">
            <summary>
            gets specified publish artifact item info (including images + attributes)
            </summary>
            <param name="artifactUrl"></param>
            <param name="itemUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactItemByFrienlyUrlUserVisible(System.String,System.String)">
            <summary>
            gets specified publish artifact item info (including images + attributes) 
            </summary>
            <param name="artifactUrl"></param>
            <param name="itemUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.Post">
            <summary>
            Add new artifact (multipart/form-data)
            
            
                const data = new FormData();
                data.append('name', 'تست');
                data.append('description', '');
                data.append('srcUrl', '');
                data.append('picTitle', 'تست');
                data.append('picDescription', '');
                data.append('file', this.file);
                data.append('picSrcUrl', '');
                
            
            </summary>        
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.Import(System.String,System.String,System.String,System.String)">
            <summary>
            import from external resources
            </summary>
            <param name="srcType">loc/princeton/harvard/qajarwomen/hathitrust/penn/cam/bl/folder/walters/cbl</param>
            <param name="resourceNumber">119</param>
            <param name="friendlyUrl">golestan-baysonghori</param>
            <param name="resourcePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.KeepAlive">
            <summary>
            keep alive (for import background service)
            </summary>
            <returns>true</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.RetryImport">
            <summary>
            retry import
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.ReExamineLocDownloads(System.String)">
            <summary>
            due to a bug in loc json outputs some artifacts with more than 1000 pages were downloaded incompletely
            </summary>
            <param name="pass">123456</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.BookmarkArtifact(System.Guid)">
            <summary>
            bookmark artifact
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.BookmarkItem(System.Guid)">
            <summary>
            bookmark item
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.DeleteBookmark(System.Guid)">
            <summary>
            item bookmarks info
            </summary>
            <param name="bookmarkId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.FavArtifact(System.Guid)">
            <summary>
            fav artifact
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.FavItem(System.Guid)">
            <summary>
            fav item
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GeIArtifactUserBookmarks(System.Guid)">
            <summary>
            artifact bookmarks info
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GeItemUserBookmarks(System.Guid)">
            <summary>
            item bookmarks info
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserBookmarks(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            user bookmarks
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserFavorites(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            user favorites
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.AddUserNoteToArtifact(RMuseum.Models.Note.ViewModels.PostUserNote)">
            <summary>
            add note for artifact
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.AddUserNoteToArtifactItem(RMuseum.Models.Note.ViewModels.PostUserNote)">
            <summary>
            add note for artifact item
            </summary>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.EditUserNote(System.Guid,RMuseum.Models.Note.ViewModels.PostUserNote)">
            <summary>
            Edit User Notes
            </summary>
            <remarks>a note can not be edited by a user other than its owner or another using having note:moderate permission</remarks>
            <param name="noteId"></param>
            <param name="note">only htmlContent is processed</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.DeleteUserNote(System.Guid)">
            <summary>
            delete user notes
            </summary>
            <remarks>
            1. a note can not be deleted by a user other than its owner or another using having note:moderate permission
            2. all notes which have refernce to deleting note (sent in reply to it) would be deleted irrelevant of their ownership
            </remarks>
            <param name="noteId"></param>
            <returns>list of notes deleted</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactUserNotes(System.Guid)">
            <summary>
            get private notes for artifact
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactPublicNotes(System.Guid)">
            <summary>
            get private notes for artifact
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactItemUserNotes(System.Guid)">
            <summary>
            get private notes for artifact item
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetArtifactItemPublicNotes(System.Guid)">
            <summary>
            get public notes for artifact item
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserPublicNotes(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            user public notes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetUserPrivateNotes(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            user public notes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetAllPublicNotes(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            all users public notes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.SuggestGanjoorLink(RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion)">
            <summary>
            suggest ganjoor link
            </summary>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetSuggestedLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested ganjoor links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetNextUnsynchronizedSuggestedLinkWithAlreadySynchedOneForPoem(System.Int32)">
            <summary>
            finds next unsynchronized suggested link with an aleady synched one from the artificat if exists,
            return value might be null or an array with length  1 or 2 (has paging-headers)
            </summary>
            <remarks>has paging-headers</remarks>
            <param name="skip"></param>
            <returns> return value might be null or an array with length  1 or 2</returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.ReviewGanjoorLink(System.Guid,RMuseum.Models.GanjoorIntegration.ReviewResult)">
            <summary>
            review suggested ganjoor link
            </summary>
            <param name="linkId"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.SynchronizeGanjoorLink(System.Guid,System.Boolean)">
            <summary>
            mark suggested ganjoor link as synchronized
            </summary>
            <param name="linkId"></param>
            <param name="displayOnPage">display ogn page</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.AddTOCForSuggestedLinks">
             <summary>
            toc / temporary one time api / to be removed
             </summary>
             <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.GetSuggestedPinterestLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested pinterest links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.SuggestPinterestLink(RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion)">
            <summary>
            suggest pinterest link for ganjoor
            </summary>
            <param name="suggestion"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.ReviewSuggestedPinterestLink(System.Guid,System.String,RMuseum.Models.GanjoorIntegration.ReviewResult,System.String,System.String)">
            <summary>
            review suggested ganjoor pinterest link
            </summary>
            <param name="linkId"></param>
            <param name="altText"></param>
            <param name="result"></param>
            <param name="reviewDesc"></param>
            <param name="imageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.SynchronizeSuggestedPinterestLink(System.Guid)">
            <summary>
            mark suggested pinterest ganjoor link as synchronized
            </summary>
            <param name="linkId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.StartFillingGanjoorLinkOriginalSources">
            <summary>
            start filling GanjoorLink table OriginalSource values
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ArtifactController.#ctor(RMuseum.Services.IArtifactService,RSecurityBackend.Services.IUserPermissionChecker,Microsoft.Extensions.Caching.Memory.IMemoryCache,RSecurityBackend.Services.ICaptchaService)">
            <summary>
            constructor
            </summary>
            <param name="artifactService">
            </param>
            <param name="userPermissionChecker"></param>
            <param name="memoryCache"></param>
            <param name="captchaService"></param>
        </member>
        <member name="F:RMuseum.Controllers.ArtifactController._artifactService">
            <summary>
            Artifact Service
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.ArtifactController._userPermissionChecker">
            <summary>
            IUserPermissionChecker instance
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.ArtifactController._memoryCache">
            <summary>
            IMemoryCache
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.ArtifactController._captchaService">
            <summary>
            Captcha service
            </summary>
        </member>
        <member name="T:RMuseum.Controllers.AuditLogController">
            <summary>
            Audit Log Controller Base
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.AuditLogController.#ctor(RSecurityBackend.Services.IAuditLogService)">
            <summary>
            constructor
            </summary>
            <param name="auditLogService">
            </param>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.GetDonations">
            <summary>
            returns all donations
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.GetDonation(System.Int32)">
            <summary>
            donation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.AddDonation(RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel)">
            <summary>
            add donation + regenerate donations page
            </summary>
            <param name="donation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.UpdateDonation(System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update donation date and donorname + regenerate donations page
            </summary>
            <param name="id"></param>
            <param name="donation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.DeleteDonation(System.Int32)">
            <summary>
            delete donation + regenerate donations page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.GetExpenses">
            <summary>
            returns all expenses
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.GetExpense(System.Int32)">
            <summary>
            expense by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.AddExpense(RMuseum.Models.Accounting.GanjoorExpense)">
            <summary>
            add expense + regenerate donations page
            </summary>
            <param name="expense"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.UpdateExpense(System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update expense date and description + regenerate donations page
            </summary>
            <param name="id"></param>
            <param name="expense"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.DeleteExpense(System.Int32)">
            <summary>
            delete expense
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.Import">
            <summary>
            one time import
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.RegenerateDonationsPage">
            <summary>
            regenerate donations page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.DonationAccountingController.IsAccountInfoVisible">
            <summary>
            is account info settings is on or off (for deciding to regenerate donations page based on it)
            </summary>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Controllers.DonationAccountingController._donationService">
            <summary>
            donation service
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoets">
            <summary>
            get list of published poets without their biography
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetAllPoets">
            <summary>
            get list of all poets (including unpublished ones) with their bio
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoetById(System.Int32)">
            <summary>
            poet by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoetByUrl(System.String)">
            <summary>
            poet by url
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ModifyPoet(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel)">
            <summary>
            update poet info (except for image)
            </summary>
            <param name="id"></param>
            <param name="poet"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.CreatePoet(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel)">
            <summary>
            create new poet
            </summary>
            <param name="poet"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartDeletePoet(System.Int32)">
            <summary>
            starts deleting poet job
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoetImageInPng(System.String)">
            <summary>
            get poet image with png ext
            </summary>
            <param name="url">sample: hafez</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoetImage(System.String)">
            <summary>
            get poet image
            </summary>
            <param name="url">sample: hafez</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.UploadPoetImage(System.Int32)">
            <summary>
            set poet image
            </summary>
            <param name="id">poet image</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetCatById(System.Int32,System.Boolean)">
            <summary>
            cat by id
            </summary>
            <param name="id"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetCatByUrl(System.String,System.Boolean)">
            <summary>
            cat by full url
            </summary>
            <param name="url"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.BatchRenameCatPoemTitles(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel)">
            <summary>
            batch rename cat poems
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.FindCategoryPoemsRhymes(System.Int32,System.Boolean)">
            <summary>
            starts assigning poem rhymes
            </summary>
            <param name="id"></param>
            <param name="retag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.FindCategoryPoemsRhythms(System.Int32,System.Boolean,System.String)">
            <summary>
            start assigning poem rhuthmes
            </summary>
            <param name="id"></param>
            <param name="retag"></param>
            <param name="rhythm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GenerateTableOfContents(System.Int32,RMuseum.Models.Ganjoor.GanjoorTOC)">
            <summary>
            generate category toc
            </summary>
            <param name="id"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartGeneratingSubCatsTOC(System.Int32)">
            <summary>
            start generating sub cats TOC
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPageByUrl(System.String,System.Boolean)">
            <summary>
            page by url
            </summary>
            <param name="url"></param>
            <param name="catPoems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ModifyPage(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel)">
            <summary>
            modify page
            </summary>
            <param name="id"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.CacheCleanForPageById(System.Int32)">
            <summary>
            clean cache by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DeletePageAsync(System.Int32)">
            <summary>
            delete page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetOlderVersionsOfPage(System.Int32)">
            <summary>
            older versions of a page (modifications history except for current version)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetOldVersionOfPage(System.Int32)">
            <summary>
            get old version of page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPageUrlById(System.Int32)">
            <summary>
            page url by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemById(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            get poem by id
            </summary>
            <param name="id"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes"></param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs"></param>
            <param name="comments">not implemented yet</param>
            <param name="verseDetails"></param>
            <param name="navigation">next/previous</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemByUrl(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            get poem by url
            </summary>
            <param name="url"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes">not implemented yet</param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs">not implemented yet</param>
            <param name="comments">not implemented yet</param>
            <param name="verseDetails"></param>
            <param name="navigation">next/previous</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemRecitations(System.Int32)">
            <summary>
             get poem recitations  (PlainText/HtmlText are intentionally empty)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemImages(System.Int32)">
            <summary>
             get poem images  (PlainText/HtmlText are intentionally empty)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemSongs(System.Int32,System.Boolean,RMuseum.Models.Ganjoor.PoemMusicTrackType)">
            <summary>
            get poem songs
            </summary>
            <param name="id"></param>
            <param name="approved"></param>
            <param name="trackType"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemComments(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Get Poem Comments
            </summary>
            <param name="id"></param>
            <param name="coupletIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.SuggestPoemCorrection(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            send poem corrections
            </summary>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DeletePoemCorrections(System.Int32)">
            <summary>
            delete unreviewed user corrections for a poem
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetLastUnreviewedUserCorrectionForPoem(System.Int32)">
            <summary>
            returns last unreviewed correction from the user for a poem
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetUserCorrections(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get list of user suggested corrections
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetPoemEffectiveCorrections(System.Int32,RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            effective corrections for poem
            </summary>
            <param name="id"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetCorrectionById(System.Int32)">
            <summary>
            get correction by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetNextUnreviewedCorrection(System.Int32)">
            <summary>
            get next unreviewed correction
            </summary>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ModeratePoemCorrection(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            moderate poem correction
            </summary>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.SuggestSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            suggest song for poem
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetNextUnreviewedSong(System.Int32,System.Boolean)">
            <summary>
            get next unreviewed song
            </summary>
            <param name="skip"></param>
            <param name="onlyMine"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetUserSongsSuggestionsStatistics(System.Guid)">
            <summary>
            history of suggested songs by a user
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ReviewSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            review song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DirectInsertSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            directly insert a poem related song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.Faal">
            <summary>
             get a random poem from hafez
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetARandomPoem(System.Int32)">
            <summary>
            get a random poem from a poet (c.ganjoor.net replacement), 0 means random poet, 
            حافظ (2)، خیام (3)، ابوسعید ابوالخیر (26)، صائب (22)، سعدی (7)، باباطاهر (28)، مولوی (5)، اوحدی (19)، خواجو (20)، شهریار (35)، عراقی (21)، فروغی بسطامی (32)، سلمان ساوجی (40)، محتشم کاشانی (29)، امیرخسرو دهلوی (34)، سیف فرغانی (31)، عبید زاکانی (33)، هاتف اصفهانی (25) یا رهی معیری (41)
            </summary>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetRecentComments(RSecurityBackend.Models.Generic.PagingParameterModel,System.Nullable{System.Guid})">
            <summary>
            get recent comments
            </summary>
            <param name="paging"></param>
            <param name="filterUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetMyRecentComments(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get logged on users recent comments
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.NewComment(RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel)">
            <summary>
            post new comment
            </summary>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.EditMyComment(System.Int32,System.String)">
            <summary>
            edit user's own comment
            </summary>
            <param name="id"></param>
            <param name="comment"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DeleteMyComment(System.Int32)">
            <summary>
            delete user's own comment
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ReportComment(RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel)">
            <summary>
            report a comment
            </summary>
            <param name="report"></param>
            <returns>id of reported record</returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DeleteReport(System.Int32)">
            <summary>
            delete a report (without deleting corresponding comment)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetReportedComments(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get list of reported comments
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.DeleteModerateComment(System.Int32)">
            <summary>
            delete reported other users comment comment
            </summary>
            <param name="reportid"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ImportLocalSQLiteDb(System.Int32)">
            <summary>
            imports data from ganjoor SQLite database (form file)
            </summary>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ApplyCorrectionsFromSqlite(System.Int32,System.String)">
            <summary>
            Apply corrections from sqlite
            </summary>
            <param name="poetId"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ExportToSqlite(System.Int32)">
            <summary>
            export a poet to sqlite database
            </summary>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartBatchGenerateGDBFiles">
            <summary>
            start exporting all poets
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.ImportFromMySql">
            <summary>
            imports data from ganjoor MySql database
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetUserPublicProfile(System.Guid)">
            <summary>
            Get user public profile
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetSimilarPoems(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.String,System.Int32)">
            <summary>
            Get Similar Poems accroding to prosody and rhyme informations
            </summary>
            <param name="paging"></param>
            <param name="metre">cannot be empty</param>
            <param name="rhyme">can be empty</param>
            <param name="poetId">send 0 for all</param>
            <returns>return value is not complete or valid for some parts, you should use only the valid parts!</returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.Search(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.Int32,System.Int32)">
            <summary>
            search
            </summary>
            <param name="paging"></param>
            <param name="term"></param>
            <param name="poetId"></param>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.GetGanjoorMetres">
            <summary>
            returns ganjoor metre list ordered by rhythm
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.FindPoemRhyme(System.Int32)">
            <summary>
            find poem rhyme
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.FindPoemRhythm(System.Int32)">
            <summary>
            analysis poem to find its prosody information
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.HealthCheckContents">
            <summary>
            examine site pages for broken links
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.RegerneratePoemsPlainText">
            <summary>
            separate verses in poem.PlainText with  Environment.NewLine instead of SPACE
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartBuildingSitemap">
            <summary>
            start building sitemap
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartUpdatingStatsPage">
            <summary>
            regenerate stats page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.StartUpdatingMundexPage">
            <summary>
            start updating mundex page
            </summary>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Controllers.GanjoorController.ReadOnlyMode">
            <summary>
            readonly mode
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.GanjoorController._ganjoorService">
            <summary>
            Ganjoor Service
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.GanjoorController._appUserService">
            <summary>
            IAppUserService instance
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.GanjoorController._httpContextAccessor">
            <summary>
            for client IP resolution
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.GanjoorController._imageFileService">
            <summary>
            Image Service
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.GanjoorController._memoryCache">
            <summary>
            IMemoryCache
            </summary>
        </member>
        <member name="P:RMuseum.Controllers.GanjoorController.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.GanjoorController.#ctor(RMuseum.Services.IGanjoorService,RSecurityBackend.Services.IAppUserService,Microsoft.AspNetCore.Http.IHttpContextAccessor,RSecurityBackend.Services.IImageFileService,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            constructor
            </summary>
            <param name="ganjoorService"></param>
            <param name="appUserService"></param>
            <param name="httpContextAccessor"></param>
            <param name="imageFileService"></param>
            <param name="memoryCache"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:RMuseum.Controllers.ImageController.Get(System.Guid,System.String)">
            <summary>
            returns image stream
            </summary>
            <param name="id"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ImageController.Rotate(System.Guid,System.Int32)">
            <summary>
            Rotate Image in 90 deg. multiplicants: 90, 180 or 270
            </summary>
            <param name="id"></param>
            <param name="degIn90mul"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.ImageController.GenerateCroppedImageBasedOnThumbnailCoordinates(System.Guid,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Generate Cropped Image Based On ThumbnailCoordinates For Notes
            </summary>
            <param name="id"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns>id of cropped image</returns>
        </member>
        <member name="M:RMuseum.Controllers.ImageController.#ctor(RMuseum.Services.IPictureFileService)">
            <summary>
            constructor
            </summary>
            <param name="pictureFileService">
            </param>
        </member>
        <member name="F:RMuseum.Controllers.ImageController._pictureFileService">
            <summary>
            Artifact Service
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.MusicCatalogueController.GetGolhaCollectionPrograms(System.Int32)">
            <summary>
            golha collection programs
            </summary>
            <param name="id">collection id</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.MusicCatalogueController.GetGolhaProgramTracks(System.Int32)">
            <summary>
            program tracks
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Controllers.MusicCatalogueController._catalogueService">
            <summary>
            Catalogue Service
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.MusicCatalogueController.#ctor(RMuseum.Services.IMusicCatalogueService)">
            <summary>
            constructor
            </summary>
            <param name="catalogueService"></param>
        </member>
        <member name="T:RMuseum.Controllers.NoificationController">
            <summary>
            Notifications controller
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.NoificationController.#ctor(RSecurityBackend.Services.IRNotificationService)">
            <summary>
            constructor
            </summary>
            <param name="notificationService"></param>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetPublished(RSecurityBackend.Models.Generic.PagingParameterModel,System.String)">
            <summary>
            returns paginated published recitations, ordered by publish date descending
            </summary>
            <param name="paging">if PageSize is -1 or is more than 100 it resets to 100</param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetPublishedRecitationById(System.Int32)">
            <summary>
            get published recitation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetRssFeed">
            <summary>
            creates an RSS file from recent published recitations
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.Get(RSecurityBackend.Models.Generic.PagingParameterModel,System.Boolean,RMuseum.Models.GanjoorAudio.AudioReviewStatus,System.String)">
            <summary>
            Gets audio narrations, user must have recitation::moderate permission to be able to see all users narrations
            </summary>
            <param name="paging"></param>
            <param name="allUsers">default: false, user must have recitation::moderate permission to be able to see all users narrations</param>
            <param name="status">default: -1, unfiltered</param>
            <param name="searchTerm"></param>
            <remarks>additional headers: paging-headers, audio-upload-enabled</remarks>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetMp3File(System.Int32)">
            <summary>
            get the corresponding mp3 file for the narration
            </summary>
            <remarks>
            it could be protected (Authorized), but I guess I would have problems with available client components support,
            so I preferred it to be anonymous, as it does not harm anybody I guess 
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetXMLContent(System.Int32)">
            <summary>
            get the corresponding xml file contents (xml) for the narration
            </summary>
            <remarks>
            it could be protected (Authorized), but I guess I would have problems with available client components support,
            so I preferred it to be anonymous, as it does not harm anybody I guess 
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetXMLFile(System.Int32)">
            <summary>
            get the corresponding xml file for the recitation
            </summary>
            <remarks>
            it could be protected (Authorized), but I guess I would have problems with available client components support,
            so I preferred it to be anonymous, as it does not harm anybody I guess 
            </remarks>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetPoemNarrationVerseSyncArray(System.Int32)">
            <summary>
            Gets Verse Sync Information
            </summary>
            <param name="id">narration id</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.UpdatePoemNarration(System.Int32,RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel)">
            <summary>
            updates narration metadata
            </summary>
            <param name="id"></param>
            <param name="metadata"></param>
            <remarks>
            reviewstatus cannot be set to Approved or Rejected using this method, use moderate method instead
            only these set of fields are updatable: AudioTitle, AudioArtist, AudioArtistUrl, AudioSrc, AudioSrcUrl, ReviewStatus (Draft to Pending and vice versa and Approved/Rejected to Pending)
            only narrator or a moderator can update the narration 
            </remarks>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.ModeratePoemNarration(System.Int32,RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel)">
            <summary>
            Moderate pending narration (for moderating other users' recitations you also need recitation:moderate permission)
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.DeleteRecitation(System.Int32)">
            <summary>
            Delete a recitation
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetUploads(RSecurityBackend.Models.Generic.PagingParameterModel,System.Boolean)">
            <summary>
            Get User Uploads
            </summary>
            <param name="paging"></param>
            <param name="allUsers">default: false, user must have recitation::moderate permission to be able to see all users uploads</param>
            <returns></returns>
            <remarks>additional headers: paging-headers, audio-upload-enabled</remarks>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.IsUploadEnabled">
            <summary>
            upload, update, moderate and delete operations on recitations might temporarily become disabled,
            this method gets the current status
            remarks: the value of this flag is provided as a custom header called audio-upload-enabled in some common GET methods
            in order to reduce the need for a separate query
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.UploadReciation(System.Boolean)">
            <summary>
            Reciation Upload
            </summary>
            <param name="replace">
            if you send true to replace parameter, if there is an existing recitation for the poem from the user with the same Audio Artist name
            corresponding mp3+xml files are replaced an no other changes is applied (no new post, preserving recitation position)
            </param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.MysqlonetimeImport">
            <summary>
            imports data from ganjoor MySql database
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetUserNarrationProfiles(System.String)">
            <summary>
            Get User Profiles
            </summary>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetUserDefProfile">
            <summary>
            Get User Default Profile
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.AddUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Add a narration profile
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.UpdateUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Update a narration profile
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.DeleteUserNarrationProfiles(System.Guid)">
            <summary>
            Delete a narration profile 
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetPublishingQueueStatus(RSecurityBackend.Models.Generic.PagingParameterModel,System.Boolean)">
            <summary>
            publishing tracker data
            </summary>
            <param name="paging"></param>
            <param name="unfinished"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.TransferRecitationsOwnership(System.String,System.String)">
            <summary>
            Transfer Recitations Ownership (for recitations owned by current user)
            </summary>
            <param name="targetEmailAddress"></param>
            <param name="artistName"></param>
            <returns>number of transfered items</returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.MakeFFRecitationsFirst">
            <summary>
            Makes recitations of فریدون فرح‌اندوز first recitations
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.GetSynchronizationQueue">
            <summary>
            Synchronization Queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.RecitationController.#ctor(RMuseum.Services.IRecitationService,RSecurityBackend.Services.IUserPermissionChecker,RSecurityBackend.Services.IAppUserService)">
            <summary>
            constructor
            </summary>
            <param name="audioService"></param>
            <param name="userPermissionChecker"></param>
            <param name="appUserService"></param>
        </member>
        <member name="F:RMuseum.Controllers.RecitationController._audioService">
            <summary>
            Artifact Service
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.RecitationController._userPermissionChecker">
            <summary>
            IUserPermissionChecker instance
            </summary>
        </member>
        <member name="F:RMuseum.Controllers.RecitationController._appUserService">
            <summary>
            IAppUserService instance
            </summary>
        </member>
        <member name="T:RMuseum.Controllers.RGenericOptionsController">
            <summary>
            options
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.RGenericOptionsController.#ctor(RSecurityBackend.Services.IRGenericOptionsService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            constructor
            </summary>
            <param name="optionsService"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="T:RMuseum.Controllers.RImageController">
            <summary>
            Generic Image Provider
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.RImageController.#ctor(RSecurityBackend.Services.IImageFileService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            constructor
            </summary>
            <param name="pictureFileService"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="T:RMuseum.Controllers.RLongRunningJobsController">
            <summary>
            Long Running Jobs
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.RLongRunningJobsController.#ctor(RSecurityBackend.Services.ILongRunningJobProgressService)">
            <summary>
            constructor
            </summary>
            <param name="jobService">
            </param>
        </member>
        <member name="T:RMuseum.Controllers.RoleController">
             <summary>
            roles
             </summary>
        </member>
        <member name="M:RMuseum.Controllers.RoleController.#ctor(RSecurityBackend.Services.IUserRoleService)">
            <summary>
            constructor
            </summary>
            <param name="roleService"></param>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.AddSiteBanner">
            <summary>
            add site banner (send form) with these fields: alt, url and an image attachment
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.ModifySiteBanner(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerModifyViewModel)">
            <summary>
            modify site banner
            </summary>
            <param name="id"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.DeleteSiteBanner(System.Int32)">
            <summary>
            delete site banner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.GetSiteBanners">
            <summary>
            get all defined site banners
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.GetARandomActiveSiteBanner">
            <summary>
            get a random active site banner
            </summary>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Controllers.SiteBannersController._bannersService">
            <summary>
            Ganjoor Service
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.SiteBannersController.#ctor(RMuseum.Services.ISiteBannersService)">
            <summary>
            constructor
            </summary>
            <param name="bannersService"></param>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetLanguagesAsync">
            <summary>
            get all languages
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetLanguageAsync(System.Int32)">
            <summary>
            get language by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.AddLanguageAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            add new language
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.UpdateLangaugeAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            update an existing language
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetPublishedTranslationsAsync(System.Int32)">
            <summary>
            get published poem translations
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetPublishedTranslationAsync(System.Int32,System.Int32)">
            <summary>
            get published poem translation in a specific language
            </summary>
            <param name="id"></param>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetPoemTranslationsAsync(System.Int32,System.Int32)">
            <summary>
            get all translations of a poem in a specific language
            </summary>
            <param name="id"></param>
            <param name="lang">send -1 for all languages</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.GetLastUserContributedLanguage">
            <summary>
            last language user has contributed in its translation
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.AddOrUpdatePoemTranslation(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel)">
            <summary>
            add translation for a poem (please specify verses VORder, Id is not processed)
            </summary>
            <param name="translation"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Controllers.TranslationController._translationService">
            <summary>
            translation service
            </summary>
        </member>
        <member name="M:RMuseum.Controllers.TranslationController.#ctor(RMuseum.Services.IGanjoorTranslationService)">
            <summary>
            constructor
            </summary>
            <param name="translationService"></param>
        </member>
        <member name="T:RMuseum.DbContext.RMuseumDbContext">
            <summary>
            Museum Database Context
            </summary>
        </member>
        <member name="M:RMuseum.DbContext.RMuseumDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.PictureFiles">
            <summary>
            Picture Files
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.Tags">
            <summary>
            Item Attributes
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.Artifacts">
            <summary>
            Artifacts
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.Items">
            <summary>
            Items
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.ImportJobs">
            <summary>
            Import Jobs
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.TagValues">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.UserBookmarks">
            <summary>
            User Bookmarks
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.UserNotes">
            <summary>
            User Notes
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorLinks">
            <summary>
            Ganjoor Links
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.PinterestLinks">
            <summary>
            Pinterest Links
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.Recitations">
            <summary>
            Ganjoor Audio Files
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.UploadSessions">
            <summary>
            Upload Sessions
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.UploadedFiles">
            <summary>
            Uploaded files
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.UserRecitationProfiles">
            <summary>
            User Recitation Profiles
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPoets">
            <summary>
            Ganjoor Poets
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorCategories">
            <summary>
            Ganjoor Categories
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPoems">
            <summary>
            Ganjoor Poems
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorVerses">
            <summary>
            Ganjoor Verses
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.RecitationPublishingTrackers">
            <summary>
            Narration Publishing Tracker
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPages">
            <summary>
            Ganjoor Pages
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorMetres">
            <summary>
            Ganjoor Metres
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorSingers">
            <summary>
            singers
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorMusicCatalogueTracks">
            <summary>
            music tracks
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GolhaTracks">
            <summary>
            golha tracks
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GolhaCollections">
            <summary>
            GolhaCollection 
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GolhaPrograms">
            <summary>
            GolhaPrograms 
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPoemMusicTracks">
            <summary>
            PoemMusicTracks
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorComments">
            <summary>
            Ganjoor Comments
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorReportedComments">
            <summary>
            Ganjoor Reported Comments
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPageSnapshots">
            <summary>
            Ganjoor Page Snapshots
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorSiteBanners">
            <summary>
            Ganjoor Site Bannaers
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorHealthCheckErrors">
            <summary>
            Ganjoor Health Check Errors
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorDonations">
            <summary>
            donations
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorExpenses">
            <summary>
            expenses
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.DonationExpenditure">
            <summary>
            donation expenditures
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPoemCorrections">
            <summary>
            poem corrections
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorLanguages">
            <summary>
            languages for translation
            </summary>
        </member>
        <member name="P:RMuseum.DbContext.RMuseumDbContext.GanjoorPoemTranslations">
            <summary>
            poem translations
            </summary>
        </member>
        <member name="T:RMuseum.Models.Accounting.DonationExpenditure">
            <summary>
            donation expenditures
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.DonationExpenditure.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.DonationExpenditure.GanjoorDonationId">
            <summary>
            GanjoorDonation Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.DonationExpenditure.GanjoorDonation">
            <summary>
            GanjoorDonation
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.DonationExpenditure.Amount">
            <summary>
            amount
            </summary>
        </member>
        <member name="T:RMuseum.Models.Accounting.GanjoorDonation">
            <summary>
            Ganjoor Donation (based on donation records saved in old html format of https://ganjoor.net/donate/)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.DateString">
            <summary>
            date: (donation dates have been collected in different formats, so instead of keeping their dates in a DateTime field I ought to use a string field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.RecordDate">
            <summary>
            record date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.Amount">
            <summary>
            donation amount (0 for old imported records)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.Unit">
            <summary>
            Amount Unit
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.AmountString">
            <summary>
            amount string (avoiding to parse different formats of old html text)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.DonorName">
            <summary>
            donor name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.DonorLink">
            <summary>
            donor link (unused)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.Remaining">
            <summary>
            remaining (it could be ignored later when our data has been normalized enough and be calculated using related data)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.ExpenditureDesc">
            <summary>
            expenditure desc
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorDonation.ImportedRecord">
            <summary>
            record is imported from old HTML text of donation page
            </summary>
        </member>
        <member name="T:RMuseum.Models.Accounting.GanjoorExpense">
            <summary>
            Ganjoor Expenses
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.ExpenseDate">
            <summary>
            date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.Amount">
            <summary>
            amount
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.Unit">
            <summary>
            unit
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.GanjoorExpense.DonationExpenditures">
            <summary>
            donation expenitures
            </summary>
        </member>
        <member name="T:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel">
            <summary>
            Ganjoor Donation View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.Id">
            <summary>
            id - null for POST api -
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.RecordDate">
            <summary>
            record date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.Amount">
            <summary>
            donation amount (0 for old imported records)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.Unit">
            <summary>
            "تومان" is good, Amount Unit, if you send another Unit it would be consumed with EXPENSES of the same Unit, if it send EMPTY it wotld not be consumed!
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.DonorName">
            <summary>
            donor name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.DateString">
            <summary>
            null for POST api -  date: (donation dates have been collected in different formats, so instead of keeping their dates in a DateTime field I ought to use a string field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.AmountString">
            <summary>
            null for POST api -amount string (avoiding to parse different formats of old html text)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.Remaining">
            <summary>
            null for POST api -remaining (it could be ignored later when our data has been normalized enough and be calculated using related data)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.ExpenditureDesc">
            <summary>
            null for POST api -expenditure desc
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel.ImportedRecord">
            <summary>
            null for POST api - record is imported from old HTML text of donation page
            </summary>
        </member>
        <member name="T:RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel">
            <summary>
            update date and description view model (donation + expense limited update api)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel.Date">
            <summary>
            date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.PublishStatus">
            <summary>
            Items or pictures status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.RArtifactMasterRecordId">
            <summary>
            parent id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Order">
            <summary>
            Order in Collections
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.NameInEnglish">
            <summary>
            Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.DescriptionInEnglish">
            <summary>
            Description In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.CoverImageIndex">
            <summary>
            Main Image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.LastModified">
            <summary>
            Last Modified for caching purposes
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Images">
            <summary>
            All Images
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactItemRecord.Tags">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.RArtifactMasterRecord">
            <summary>
            Museum Master Item
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Status">
            <summary>
            Publish Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.NameInEnglish">
            <summary>
            Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.DescriptionInEnglish">
            <summary>
            Description In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.DateTime">
            <summary>
            Date/Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.LastModified">
            <summary>
            Last Modified for caching purposes
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.CoverItemIndex">
            <summary>
            Cover Item Index
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.CoverImage">
            <summary>
            Cover Image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.CoverImageId">
            <summary>
            Cover Image Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Items">
            <summary>
            Parts of this item
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.ItemCount">
            <summary>
            Item Count (for lists and queries)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RArtifactMasterRecord.Tags">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="M:RMuseum.Models.Artifact.RArtifactMasterRecord.ToViewModel(RMuseum.Models.Artifact.RArtifactMasterRecord)">
            <summary>
            to view model
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Models.Artifact.RPictureFile">
            <summary>
            Artifact Picture Files
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.TitleInEnglish">
            <summary>
            Title in English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.DescriptionInEnglish">
            <summary>
            Description in English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.Status">
            <summary>
            Publish status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.Order">
            <summary>
            order in the collection it belongs to it
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.NormalSizeImageStoredFileName">
            <summary>
            نام فایل ذخیره شده با بالاترین کیفیت
            </summary>
            <example>
            e0d7050a-7e30-4a2f-b181-0daa4a1e1068.jpg
            </example>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.ThumbnailImageStoredFileName">
            <summary>
            نام فایل ذخیره شده با بالاترین کیفیت
            </summary>
            <example>
            fbe9cc8e-12fa-4cb9-8f09-bbf353333383.jpg
            </example>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.NormalSizeImageWidth">
            <summary>
            عرض تصویر مناسب نمایش در صفحهٔ اختصاصی
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.NormalSizeImageHeight">
            <summary>
            طول تصویر مناسب نمایش در صفحهٔ اختصاصی
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.ThumbnailImageWidth">
             <summary>
            عرض تصویر با اندازه مناسب نمایش در صفحات لیستی
             </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.ThumbnailImageHeight">
             <summary>
            طول تصویر با اندازه مناسب نمایش در صفحات لیستی
             </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.SrcUrl">
            <summary>
            source url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RPictureFile.LastModifiedMeta">
            <summary>
            Last Modified for caching purposes
            </summary>
        </member>
        <member name="M:RMuseum.Models.Artifact.RPictureFile.Duplicate(RMuseum.Models.Artifact.RPictureFile)">
            <summary>
            duplicated a picture record (Id is missing so you should store this to get a new Id)
            </summary>
            <param name="src"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Models.Artifact.RTag">
            <summary>
            Item Attribute
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.TagType">
            <summary>
            tag type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.Status">
            <summary>
            Publish Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.NameInEnglish">
            <summary>
            Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.PluralName">
            <summary>
            Plural Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.PluralNameInEnglish">
            <summary>
            Plural Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTag.GlobalValue">
            <summary>
            Value is normally changed globally 
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.RTagType">
            <summary>
            نوع ویژگی
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.Ordinary">
            <summary>
            عادی
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.Link">
            <summary>
            پیوند
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.Search">
            <summary>
            جستجو
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.LinkSearch">
            <summary>
            پیوند و جستجو
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.LeftToRightText">
            <summary>
            متن چپ به راست
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.Binary">
            <summary>
            بدون مقدار
            </summary>
        </member>
        <member name="F:RMuseum.Models.Artifact.RTagType.TitleInContents">
            <summary>
            عنوان در فهرست
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.RTagValue">
            <summary>
            Attribute Value
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.Status">
            <summary>
            Publish Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.ValueInEnglish">
            <summary>
            Values In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.RTagValue.ValueSupplement">
            <summary>
            link or ....
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.NewArtifact">
            <summary>
            new artifact view model
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel">
            <summary>
            RArtifactItemRecord with additional info
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.Item">
            <summary>
            main item info
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.ParentFriendlyUrl">
            <summary>
            parent
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.ParentName">
            <summary>
            parent name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.ParentImageId">
            <summary>
            parent image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.ParentItemCount">
            <summary>
            parent item count
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.NextItemFriendlyUrl">
            <summary>
            empty or null means this is last item
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.NextItemImageId">
            <summary>
            next image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.PreviousItemFriendlyUrl">
            <summary>
            empty or null means this is first item
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.PrevItemImageId">
            <summary>
            prev image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactItemRecordViewModel.FormattedTags">
            <summary>
            Formatted Tags
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel">
            <summary>
            Museum Master Item View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Status">
            <summary>
            Publish Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.NameInEnglish">
            <summary>
            Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.DescriptionInEnglish">
            <summary>
            Description In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.DateTime">
            <summary>
            Date/Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.LastModified">
            <summary>
            Last Modified for caching purposes
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.CoverItemIndex">
            <summary>
            Cover Item Index
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.CoverImage">
            <summary>
            Cover Image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.CoverImageId">
            <summary>
            Cover Image Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Items">
            <summary>
            Parts of this item
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.ItemCount">
            <summary>
            Item Count (for lists and queries)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Tags">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.ArtifactTags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.RTagSums">
            <summary>
            Binary Tagged Items
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactMasterRecordViewModel.Contents">
            <summary>
            Titles of Items in Contents
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel">
            <summary>
            Artifact Tag (RTag with grouped related RTagValues of Artifact)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.TagType">
            <summary>
            tag type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.Status">
            <summary>
            Publish Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.NameInEnglish">
            <summary>
            Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.PluralName">
            <summary>
            Plural Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.PluralNameInEnglish">
            <summary>
            Plural Name In English
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.GlobalValue">
            <summary>
            Value is normally changed globally 
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RArtifactTagViewModel.Values">
            Values
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RTagBundleValueViewModel">
            <summary>
            Tag Bundle View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleValueViewModel.Name">
            <summary>
            Item Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleValueViewModel.FriendlyUrl">
            <summary>
            Item Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleValueViewModel.Count">
            <summary>
            Items Count
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleValueViewModel.ImageId">
            <summary>
            Item Image Id
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel">
            <summary>
            Tag Bundle View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel.FriendlyUrl">
            <summary>
            Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel.PluralName">
            <summary>
            Plural Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagBundleViewModel.Values">
            <summary>
            Values
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RTagSum">
            <summary>
            Artifact Binary Tagged items Summation
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagSum.TagName">
            <summary>
            Tag Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagSum.TagFriendlyUrl">
            <summary>
            Tag Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTagSum.ItemCount">
            <summary>
            Item Count
            </summary>
        </member>
        <member name="T:RMuseum.Models.Artifact.ViewModels.RTitleInContents">
            <summary>
            Title of an Item in Artifact Contents
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTitleInContents.Title">
            <summary>
            Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTitleInContents.Order">
            <summary>
            Order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTitleInContents.Level">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:RMuseum.Models.Artifact.ViewModels.RTitleInContents.ItemFriendlyUrl">
            <summary>
            Item Friendly Url
            </summary>
        </member>
        <member name="T:RMuseum.Models.Auth.Memory.RMuseumSecurableItem">
            <summary>
            specific forms and permission
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ArtifactEntityShortName">
            <summary>
            artifact
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.TagEntityShortName">
            <summary>
            tag
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.NoteEntityShortName">
            <summary>
            note
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ViewDraftOperationShortName">
            <summary>
             view drafts
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.EditTagValueOperationShortName">
            <summary>
             edittag
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ToAwaitingStatusOperationShortName">
            <summary>
             awaiting
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.PublishOperationShortName">
            <summary>
             publish
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ImportOperationShortName">
            <summary>
             import
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ModerateOperationShortName">
            <summary>
             moderate
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ReviewGanjoorLinksOperationShortName">
            <summary>
             review suggested ganjoor links
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.AudioRecitationEntityShortName">
            <summary>
            audio narrations
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.GanjoorEntityShortName">
            <summary>
            ganjoor contents
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ReOrderOperationShortName">
            <summary>
             reorder
             </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.ReviewSongs">
            <summary>
            review suggested songs
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.AddSongs">
            <summary>
            add song from any source
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.Banners">
            <summary>
            manage footer bannaers
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.Donations">
            <summary>
            donations
            </summary>
        </member>
        <member name="F:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.Translations">
            <summary>
            translations
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.Memory.RMuseumSecurableItem.Items">
            <summary>
            list of forms and their permissions
            </summary>
        </member>
        <member name="T:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile">
            <summary>
            ganjoor user public profile
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile.RImageId">
            <summary>
            user image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile.NickName">
            <summary>
            nick name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile.Bio">
            <summary>
            biography
            </summary>
        </member>
        <member name="P:RMuseum.Models.Auth.ViewModel.GanjoorUserPublicProfile.Website">
            <summary>
            web site
            </summary>
        </member>
        <member name="T:RMuseum.Models.Bookmark.RBookmarkType">
            <summary>
            Bookmark Type
            </summary>
        </member>
        <member name="F:RMuseum.Models.Bookmark.RBookmarkType.Bookmark">
            <summary>
            Private Bookmark
            </summary>
        </member>
        <member name="F:RMuseum.Models.Bookmark.RBookmarkType.Favorite">
            <summary>
            Public Favorite
            </summary>
        </member>
        <member name="T:RMuseum.Models.Bookmark.RUserBookmark">
            <summary>
            User Bookmarks
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RAppUserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RAppUser">
            <summary>
            User
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RArtifactMasterRecordId">
            <summary>
            Master Record Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RArtifactMasterRecord">
            <summary>
            Master Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RArtifactItemRecordId">
            <summary>
            Item Record Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RArtifactItemRecord">
            <summary>
            Item Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.RBookmarkType">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.RUserBookmark.Note">
            <summary>
            User Note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.RAppUserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.RArtifactMasterRecord">
            <summary>
            Master Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.RArtifactItemRecord">
            <summary>
            Item Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.RBookmarkType">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Bookmark.ViewModels.RUserBookmarkViewModel.Note">
            <summary>
            User Note
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.AudioReviewStatus">
            <summary>
            Audio Review Status
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioReviewStatus.All">
            <summary>
            All / Unfiltered (for queris)
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioReviewStatus.Draft">
            <summary>
            Draft
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioReviewStatus.Pending">
            <summary>
            pending for review
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioReviewStatus.Approved">
            <summary>
            approved
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioReviewStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.AudioSyncStatus">
            <summary>
            Audio Synchronization Status (binary combination is acceptable)
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioSyncStatus.SynchronizedOrRejected">
            <summary>
            no changed
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioSyncStatus.NewItem">
            <summary>
            new upload
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioSyncStatus.MetadataChanged">
            <summary>
            meta data should be updated
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioSyncStatus.SoundOrXMLFilesChanged">
            <summary>
            sound files should be reuploaded (this means xml file is also needs to reuploaded)
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.AudioSyncStatus.Deleted">
            <summary>
            Item should be deleted
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.Recitation">
            <summary>
            Poem Narration
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Owner">
            <summary>
            Owner User
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.OwnerId">
            <summary>
            Owner User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.GanjoorAudioId">
            <summary>
            Final data is actually exported to a MySQL database which this auto increment field is its key
            </summary>
            <remarks>
            Caution: this could become a relation with newly added table <see cref="T:RMuseum.Models.Ganjoor.GanjoorPoem"/>
            but if we do this we lose the ability to drop and create <see cref="T:RMuseum.Models.Ganjoor.GanjoorPoem"/> without losing narration data
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioOrder">
            <summary>
            This determines where an audio is displayed between a list of sounds related to a specfic poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.FileNameWithoutExtension">
            <summary>
            Using this field content you would determine xml, mp3 and ogg file names
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.SoundFilesFolder">
            <summary>
            combining this with <see cref="P:RMuseum.Models.GanjoorAudio.Recitation.FileNameWithoutExtension"/> + .ext would preduce relative path of sound files on our file server the full path would become [HOMEPath] + '/i/' + this value
            </summary>
            <sample>
            "a2"
            </sample>
            <remarks>
            We had previously used different pathes because when a directory became overcrowded our connection time would increase unbearably due to IRAN internet problems, so it is sensible to store it per record and not as a global option value
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.RemoteMp3FilePath">
            <summary>
            MP3 File Path
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Mp3Url">
            <summary>
            MP3 url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.RemoteOggFilePath">
            <summary>
            OGG File Path
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.OggUrl">
            <summary>
            OGG url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.RemoteXMLFilePath">
            <summary>
            This is also a legacy field
            </summary>
            <sample>
            "/i/a2/x"
            </sample>
            <remarks>
            XML Schema is defined based on Desktop Ganjoor (https://github.com/ganjoor/ganjoor) code, for
            more information take a look at this code:
            https://github.com/ganjoor/ganjoor/blob/master/ganjoor/Audio%20Support/PoemAudioListProcessor.cs
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.XMLUrl">
            <summary>
            XML url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioTitle">
            <summary>
            Audio Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioArtist">
            <summary>
            Audio Artist
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioArtistUrl">
            <summary>
            Audio Artist Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioSrc">
            <summary>
            Audio Source
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioSrcUrl">
            <summary>
            Audio Src Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.LegacyAudioGuid">
            <summary>
            Legacy Audio Guid
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Mp3FileCheckSum">
            <summary>
            Audio File CheckSum
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Mp3SizeInBytes">
            <summary>
            mp3 size in bytes
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.OggSizeInBytes">
            <summary>
            ogg size in bytes
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.UploadDate">
            <summary>
            Upload Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.FileLastUpdated">
            <summary>
            File Last Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.ReviewDate">
            <summary>
            Review Date (Approve or Reject)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.LocalMp3FilePath">
            <summary>
            MP3 File local path on Windows Server (if item is not rejected probably it is not valid and it is deleted)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.LocalXmlFilePath">
            <summary>
            XML File local path on Windows Server (if item is not rejected probably it is not valid and it is deleted)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.AudioSyncStatus">
            <summary>
            AudioSyncStatus
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.ReviewStatus">
            <summary>
            Review Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.Reviewer">
            <summary>
            Reviewer user
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.ReviewerId">
            <summary>
            Reviewer user
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.Recitation.ReviewMsg">
            <summary>
            Review Message
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker">
            <summary>
            Narration Publishing Tracker
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.PoemNarrationId">
            <summary>
            Poem Narration Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.PoemNarration">
            <summary>
            Poem Narration
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.StartDate">
            <summary>
            Start Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.XmlFileCopied">
            <summary>
            XML File Copied
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.Mp3FileCopied">
            <summary>
            MP3 File Copied
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.FirstDbUpdated">
            <summary>
            First MySql DB Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.SecondDbUpdated">
            <summary>
            Second DB Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.FinishDate">
            <summary>
            Finish Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.RecitationPublishingTracker.LastException">
            <summary>
            Last Excecption
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.UserRecitationProfile">
            <summary>
            Narration Profiles for users
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.UserId">
            <summary>
            UserId
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.Name">
            <summary>
            Profile Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.FileSuffixWithoutDash">
            <summary>
            this would be appended to audio files names prefixed by a dash to make them unique and specfic to user
            filenames usually would look like {GanjoorPostId}-{FileSuffixWithoutDash}.{ext}
            for example 2200-hrm.xml
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.ArtistName">
            <summary>
            artist name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.ArtistUrl">
            <summary>
            artist url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.AudioSrc">
            <summary>
            audio src
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.AudioSrcUrl">
            <summary>
            audio src url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.UserRecitationProfile.IsDefault">
            <summary>
            is default
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.PoemNarrationModerationResult">
            <summary>
            Moderation Result
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.ViewModels.PoemNarrationModerationResult.MetadataNeedsFixation">
            <summary>
            no moderation
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.ViewModels.PoemNarrationModerationResult.Approve">
            <summary>
            approve 
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorAudio.ViewModels.PoemNarrationModerationResult.Reject">
            <summary>
            reject
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel">
            <summary>
            Public (no user specific data) for publish recitations
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.Id">
            <summary>
            Audio Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.PoemId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.PoemFullTitle">
            <summary>
            Poem Full Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.PoemFullUrl">
            <summary>
            Poem Full Url (without domain name)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.AudioTitle">
            <summary>
            Audio Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.AudioArtist">
            <summary>
            Audio Artist
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.AudioArtistUrl">
            <summary>
            Audio Artist Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.AudioSrc">
            <summary>
            Audio Source
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.AudioSrcUrl">
            <summary>
            Audio Src Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.LegacyAudioGuid">
            <summary>
            Legacy Audio Guid
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.Mp3FileCheckSum">
            <summary>
            Audio File CheckSum
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.Mp3SizeInBytes">
            <summary>
            mp3 size in bytes
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.PublishDate">
            <summary>
            Publish Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.FileLastUpdated">
            <summary>
            File Last Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.Mp3Url">
            <summary>
            Mp3 Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.XmlText">
            <summary>
            Xml Text, xml file url is {WebServiceUrl.Url}/api/audio/file/{audio.Id}.xml
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.PlainText">
            <summary>
            Poem Plain Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel.HtmlText">
            <summary>
            Poem Html Text
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel">
            <summary>
            Poem Narration Moderation View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel.Result">
            <summary>
            Moderation Result
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel.Message">
            <summary>
            Rejection Message
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel">
            <summary>
            RecitationPublishingTracker View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.UserEmail">
            <summary>
            user email
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.PoemFullTitle">
            <summary>
            Poem Full Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.ArtistName">
            <summary>
            Artist Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.Operation">
            <summary>
            Operation
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.InProgress">
            <summary>
            In Progress
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.XmlFileCopied">
            <summary>
            XML File Copied
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.Mp3FileCopied">
            <summary>
            MP3 File Copied
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.FirstDbUpdated">
            <summary>
            First MySql DB Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.SecondDbUpdated">
            <summary>
            Second DB Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.Succeeded">
            <summary>
            Succeeded
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.LastException">
            <summary>
            Exception
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.StartDate">
            <summary>
            Start Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationPublishingTrackerViewModel.FinishDate">
            <summary>
            Finish Date
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.RecitationVerseSync">
            <summary>
            Verse Sync Range
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationVerseSync.VerseOrder">
            <summary>
            Verse Order
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationVerseSync.VerseText">
            <summary>
            Verse Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationVerseSync.AudioStartMilliseconds">
            <summary>
            Audio Start in Milliseconds
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel">
            <summary>
             Poem Narration view model
            </summary>
        </member>
        <member name="M:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.#ctor">
            <summary>
            parameterless constructor for deserialization support
            </summary>
        </member>
        <member name="M:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.#ctor(RMuseum.Models.GanjoorAudio.Recitation,RSecurityBackend.Models.Auth.Db.RAppUser,RMuseum.Models.Ganjoor.GanjoorPoem)">
            <summary>
            constructor
            </summary>
            <param name="src"></param>
            <param name="appUser"></param>
            <param name="poem"></param>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.Owner">
            <summary>
            Owner User
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.GanjoorAudioId">
            <summary>
            Final data is actually exported to a MySQL database which this auto increment field is its key
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.PoemFullTitle">
            <summary>
            Poem Full Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.PoemFullUrl">
            <summary>
            Poem Full Url (without domain name)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioOrder">
            <summary>
            This determines where an audio is displayed between a list of sounds related to a specfic poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.FileNameWithoutExtension">
            <summary>
            Using this field content you would determine xml, mp3 and ogg file names
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.SoundFilesFolder">
            <summary>
            combining this with <see cref="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.FileNameWithoutExtension"/> + .ext would preduce relative path of sound files on our file server the full path would become [HOMEPath] + '/i/' + this value
            </summary>
            <sample>
            "a2"
            </sample>
            <remarks>
            We had previously used different pathes because when a directory became overcrowded our connection time would increase unbearably due to IRAN internet problems, so it is sensible to store it per record and not as a global option value
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.RemoteMp3FilePath">
            <summary>
            MP3 File Path
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.Mp3Url">
            <summary>
            MP3 url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.RemoteOggFilePath">
            <summary>
            OGG File Path
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.OggUrl">
            <summary>
            OGG url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.RemoteXMLFilePath">
            <summary>
            This is also a legacy field
            </summary>
            <sample>
            "/i/a2/x"
            </sample>
            <remarks>
            XML Schema is defined based on Desktop Ganjoor (https://github.com/ganjoor/ganjoor) code, for
            more information take a look at this code:
            https://github.com/ganjoor/ganjoor/blob/master/ganjoor/Audio%20Support/PoemAudioListProcessor.cs
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.XMLUrl">
            <summary>
            XML url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioTitle">
            <summary>
            Audio Title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioArtist">
            <summary>
            Audio Artist
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioArtistUrl">
            <summary>
            Audio Artist Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioSrc">
            <summary>
            Audio Source
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioSrcUrl">
            <summary>
            Audio Src Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.LegacyAudioGuid">
            <summary>
            Legacy Audio Guid
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.Mp3FileCheckSum">
            <summary>
            Audio File CheckSum
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.Mp3SizeInBytes">
            <summary>
            mp3 size in bytes
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.OggSizeInBytes">
            <summary>
            ogg size in bytes
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.UploadDate">
            <summary>
            Upload Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.FileLastUpdated">
            <summary>
            File Last Updated
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.ReviewDate">
            <summary>
            Review Date (Approve or Reject)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.LocalMp3FilePath">
            <summary>
            MP3 File local path on Windows Server (if item is not rejected probably it is not valid and it is deleted)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.LocalXmlFilePath">
            <summary>
            XML File local path on Windows Server (if item is not rejected probably it is not valid and it is deleted)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.AudioSyncStatus">
            <summary>
            Value is one or a combination of <see cref="T:RMuseum.Models.GanjoorAudio.AudioSyncStatus"/>
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.ReviewStatus">
            <summary>
            Review Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel.ReviewMsg">
            <summary>
            Review Message
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel">
            <summary>
            UserNarrationProfile View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.Id">
            <summary>
            Id
            </summary>
            <remarks>
            Do not fill it in POST api
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.User">
            <summary>
            User
            </summary>
            <remarks>
            Do not fill it in POST api
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.UserId">
            <summary>
            UserId
            </summary>
            <remarks>
            Do not fill it in POST api
            </remarks>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.Name">
            <summary>
            Profile Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.FileSuffixWithoutDash">
            <summary>
            this would be appended to audio files names prefixed by a dash to make them unique and specfic to user
            filenames usually would look like {GanjoorPostId}-{FileSuffixWithoutDash}.{ext}
            for example 2200-hrm.xml
            
            update [4/10/2021]: you can send this one empty
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.ArtistName">
            <summary>
            artist name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.ArtistUrl">
            <summary>
            artist url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.AudioSrc">
            <summary>
            audio src
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.AudioSrcUrl">
            <summary>
            audio src url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel.IsDefault">
            <summary>
            is default
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.GanjoorLink">
            <summary>
            ganjoor link for artifacts and items
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.ArtifactId">
            <summary>
            Artifact Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.Artifact">
            <summary>
            artifact
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.ItemId">
            <summary>
            Artifact Item Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.Item">
            <summary>
            Artifact Item
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.SuggestedById">
            <summary>
            User Id who suggested the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.SuggestionDate">
            <summary>
            Suggestion Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.SuggestedBy">
            <summary>
            User who suggested the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.ReviewerId">
            <summary>
            User id who reviewed the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.Reviewer">
            <summary>
            User who reviewed the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.ReviewDate">
            <summary>
            Review Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.ReviewResult">
            <summary>
            review result
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.Synchronized">
            <summary>
            Synchronized with ganjoor
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.DisplayOnPage">
            <summary>
            display this image on poem page
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.OriginalSourceUrl">
            <summary>
            original source url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.GanjoorLink.LinkToOriginalSource">
            <summary>
            link to original source
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.LinkType">
            <summary>
            Link Type
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.LinkType.Custom">
            <summary>
            Custom
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.LinkType.Museum">
            <summary>
            Museum
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.LinkType.Pinterest">
            <summary>
            Pinterest
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.LinkType.Instagram">
            <summary>
            Instagram
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.PinterestLink">
            <summary>
            pinterest link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.AltText">
            <summary>
            alt text
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.LinkType">
            <summary>
            link type
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.PinterestUrl">
            <summary>
            pinterest url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.PinterestImageUrl">
            <summary>
            pinterest image url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.SuggestedById">
            <summary>
            User Id who suggested the link (this would always be null for anonyous suggestions, kept it so that someday it would be used to integerate GanjoorLink into this class)
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.SuggestionDate">
            <summary>
            Suggestion Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.SuggestedBy">
            <summary>
            User who suggested the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ReviewerId">
            <summary>
            User id who reviewed the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.Reviewer">
            <summary>
            User who reviewed the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ReviewDate">
            <summary>
            Review Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ReviewResult">
            <summary>
            review result
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ReviewDesc">
            <summary>
            review description
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ArtifactId">
            <summary>
            Artifact Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.Artifact">
            <summary>
            artifact
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.ItemId">
            <summary>
            Artifact Item Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.Item">
            <summary>
            Artifact Item
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.PinterestLink.Synchronized">
            <summary>
            Synchronized with ganjoor
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.ReviewResult">
            <summary>
            Review Result
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.ReviewResult.Awaiting">
            <summary>
            Awaiting (default)
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.ReviewResult.Approved">
            <summary>
            Approved
            </summary>
        </member>
        <member name="F:RMuseum.Models.GanjoorIntegration.ReviewResult.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel">
            <summary>
            Ganjoor Link View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.EntityName">
            <summary>
            entity name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.EntityFriendlyUrl">
            <summary>
            entity friendly url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.EntityImageId">
            <summary>
            entity image id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.ReviewResult">
            <summary>
            review result
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.Synchronized">
            <summary>
            Synchronized with ganjoor
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.GanjoorLinkViewModel.SuggestedBy">
            <summary>
            suggested by
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion">
            <summary>
            Link Suggestion
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion.ArtifactFriendlyUrl">
            <summary>
            Artifact Friendly Url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion.ItemId">
            <summary>
            Artifact Item Id
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel">
            <summary>
            Safe pinterest link view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.AltText">
            <summary>
            alt text
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.LinkType">
            <summary>
            link type
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.PinterestUrl">
            <summary>
            pinterest url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.PinterestImageUrl">
            <summary>
            pinterest image url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.SuggestionDate">
            <summary>
            Suggestion Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ReviewerId">
            <summary>
            User id who reviewed the link
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ReviewDate">
            <summary>
            Review Date
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ReviewResult">
            <summary>
            review result
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ReviewDesc">
            <summary>
            review description
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ArtifactId">
            <summary>
            Artifact Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.ItemId">
            <summary>
            Artifact Item Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.Synchronized">
            <summary>
            Synchronized with ganjoor
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.EntityName">
            <summary>
            entity name
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.EntityFriendlyUrl">
            <summary>
            entity friendly url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestLinkViewModel.EntityImageId">
            <summary>
            entity image id
            </summary>
        </member>
        <member name="T:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion">
            <summary>
            pinterest / ganjoor link suggestion view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.GanjoorPostId">
            <summary>
            Ganjoor Post Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.GanjoorUrl">
            <summary>
            ganjoor url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.GanjoorTitle">
            <summary>
            ganjoor title
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.AltText">
            <summary>
            alt text
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.LinkType">
            <summary>
            link type
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.PinterestUrl">
            <summary>
            pinterest url
            </summary>
        </member>
        <member name="P:RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion.PinterestImageUrl">
            <summary>
            pinterest image url
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.CorrectionReviewResult">
            <summary>
            correction review result
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorCat">
            <summary>
            Ganjoor Category
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.PoetId">
            <summary>
            poet_id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.Poet">
            <summary>
            poet
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.Title">
            <summary>
            text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.ParentId">
            <summary>
            parent_id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.Parent">
            <summary>
            parent
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCat.FullUrl">
            <summary>
            sample: /hafez/ghazal
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorComment">
            <summary>
            Ganjoor Comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.PoemId">
            <summary>
            Ganjoor Poem Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Poem">
            <summary>
            Ganjoor Poem Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.UserId">
            <summary>
            user id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.User">
            <summary>
            user
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.AuthorName">
            <summary>
            author name (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.AuthorEmail">
            <summary>
            author email (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.AuthorUrl">
            <summary>
            author url (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.AuthorIpAddress">
            <summary>
            author IP address (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.CommentDate">
            <summary>
            comment date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.HtmlComment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.InReplyTo">
            <summary>
            In Reply to Other Comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.InReplyToId">
            <summary>
            Reference Comment Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Status">
            <summary>
            publish status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Verse1Id">
            <summary>
            related verse 1 Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Verse1">
            <summary>
            related verse 1
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Verse12d">
            <summary>
            related verse 2 Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.Verse2">
            <summary>
            related verse 2
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorComment.CoupletIndex">
            <summary>
            couplet index
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport">
            <summary>
            Comment Abuse Report
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.GanjoorCommentId">
            <summary>
            comment id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.GanjoorComment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.ReasonCode">
            <summary>
            reason code for better grouping: offensive, bogus, other
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.ReasonText">
            <summary>
            some explanotory text provided by reporter
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.ReportedById">
            <summary>
            reported by id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorCommentAbuseReport.ReportedBy">
            <summary>
            reported by user
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorHealthCheckError">
            <summary>
            Ganjoor Page Health Check log
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorHealthCheckError.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorHealthCheckError.ReferrerPageUrl">
            <summary>
            referer url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorHealthCheckError.BrokenLink">
            <summary>
            broken link
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorHealthCheckError.MulipleTargets">
            <summary>
            multiple targets for a page
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorHealthCheckError.TargetUrl">
            <summary>
            target url
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorLanguage">
            <summary>
            Language or system of writing for translating poems
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.Code">
            <summary>
            code
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.NativeName">
            <summary>
            native name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.RightToLeft">
            <summary>
            is right to left
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorLanguage.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorMetre">
            <summary>
            Poem prosodic Metre
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.UrlSlug">
            <summary>
            Url Slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.Rhythm">
            <summary>
            Rythm
            </summary>
            <example>مفاعیلن مفاعیلن فعولن</example>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.Name">
            <summary>
            Name
            </summary>
            <example>
            هزج مسدس محذوف
            </example>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorMetre.VerseCount">
            <summary>
            Total Verse Count
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPage">
            <summary>
            Ganjoor Page
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.GanjoorPageType">
            <summary>
            Page Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Published">
            <summary>
            Published
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.PageOrder">
            <summary>
            page order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.FullTitle">
            <summary>
            cat + parent cats title + title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.FullUrl">
            <summary>
            sample: /hafez/ghazal/sh1
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.HtmlText">
            <summary>
            Html Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.ParentId">
            <summary>
            parent id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Parent">
            <summary>
            parent
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.PoetId">
            <summary>
            related poet id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Poet">
            <summary>
            related poet
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.CatId">
            <summary>
            related category id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Cat">
            <summary>
            related category
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.PoemId">
            <summary>
            related poem id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.Poem">
            <summary>
            related poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.SecondPoetId">
            <summary>
            second poet id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.SecondPoet">
            <summary>
            second poet
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPage.PostDate">
            <summary>
            post date
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPageSnapshot">
            <summary>
            snapshot of ganjoor pages to keep track of their changes
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.GanjoorPageId">
            <summary>
            ganjoor page id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.GanjoorPage">
            <summary>
            ganjoor page
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.MadeObsoleteByUserId">
            <summary>
            id - this record is then modified by this user and made obsolete
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.MadeObsoleteByUser">
            <summary>
            this record is then modified by this user and made obsolete
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.RecordDate">
            <summary>
            record date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.Note">
            <summary>
            a description of the modfication
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.HtmlText">
            <summary>
            Html Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.Rhythm">
            <summary>
            Poem Rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.RhymeLetters">
            <summary>
            rhyme letters
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.SourceName">
            <summary>
            source name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.SourceUrlSlug">
            <summary>
            source url slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.OldTag">
            <summary>
            old collection or book name for Saadi's ghazalyiat (طیبات، خواتیم و ....)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPageSnapshot.OldTagPageUrl">
            <summary>
            old collection page url e.g /saadi/tayyebat
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPageType">
            <summary>
            Ganjoor Page Type
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.PoetPage">
            <summary>
            Poet Page
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.CatPage">
            <summary>
            Cat Page
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.PoemPage">
            <summary>
            Poem Page
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.ProsodySimilars">
            <summary>
            Prosody Similars
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.AllComments">
            <summary>
            Hashieha Page
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.TwoPoetsSimilarPoems">
            <summary>
            Similar Poems of two poets
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.GanjoorPageType.ProsodyAndStats">
            <summary>
            Prosody and Statistics
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPoem">
            <summary>
            Ganjoor Poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.CatId">
            <summary>
            cat-id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.Cat">
            <summary>
            cat
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.FullTitle">
            <summary>
            cat + parent cats title + title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.FullUrl">
            <summary>
            sample: /hafez/ghazal/sh1
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.PlainText">
            <summary>
            verses text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.HtmlText">
            <summary>
            verses text as html (ganjoor.net format)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.GanjoorMetreId">
            <summary>
            prosody information
            </summary>
            <remarks>
            in fact this should be a many-to-many relationship, but our current dataset lacks such a relationship instance and
            because in fact it is actuallay this relationship should exists between a non-existant entity called block of poem
            I ignored this relationship to take care of it whenever the block entity would be added to the data structure
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.GanjoorMetre">
            <summary>
            metre
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.RhymeLetters">
            <summary>
            rhyme letters
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.SourceName">
            <summary>
            source name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.SourceUrlSlug">
            <summary>
            source url slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.OldTag">
            <summary>
            old collection or book name for Saadi's ghazalyiat (طیبات، خواتیم و ....)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoem.OldTagPageUrl">
            <summary>
            old collection page url e.g /saadi/tayyebat
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPoemCorrection">
            <summary>
            poem correction
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Id">
            <summary>
            Correction Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.PoemId">
            <summary>
            poem Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Poem">
            <summary>
            poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.VerseOrderText">
            <summary>
            modified verses
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.OriginalTitle">
            <summary>
            original title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Rhythm">
            <summary>
            rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.OriginalRhythm">
            <summary>
            original rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Note">
            <summary>
            note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Date">
            <summary>
            date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.UserId">
            <summary>
            user Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.User">
            <summary>
            user
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Reviewed">
            <summary>
            reviewed
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.ReviewDate">
            <summary>
            reviewdate
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.ReviewNote">
            <summary>
            review note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.ReviewerUserId">
            <summary>
            reviewer id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.ReviewerUser">
            <summary>
            reviwer user id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.ApplicationOrder">
            <summary>
            application order for poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.Result">
            <summary>
            review result for title and rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.RhythmResult">
            <summary>
            review result for rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemCorrection.AffectedThePoem">
            <summary>
            had any effect on poem after moderation? effective in history
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPoemTranslation">
            <summary>
            poem translation
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.LanguageId">
            <summary>
            language id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Language">
            <summary>
            language
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.PoemId">
            <summary>
            poem id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Poem">
            <summary>
            poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Title">
            <summary>
            title translation
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Verses">
            <summary>
            verses
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Published">
            <summary>
            published
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.UserId">
            <summary>
            user id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.User">
            <summary>
            user
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.DateTime">
            <summary>
            date/time
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoemTranslation.Description">
            <summary>
            comments
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorPoet">
            <summary>
            Ganjoor Poet
            </summary>
            <remarks>
            cat_id field is removed, it is retrievable by querying <see cref="T:RMuseum.Models.Ganjoor.GanjoorCat"/> 
            where <see cref="P:RMuseum.Models.Ganjoor.GanjoorCat.PoetId"/> == <see cref="P:RMuseum.Models.Ganjoor.GanjoorPoet.Id"/> and
            <see cref="P:RMuseum.Models.Ganjoor.GanjoorCat.Parent"/> == null
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.Nickname">
            <summary>
            short name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.RImage">
            <summary>
            poet image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.RImageId">
            <summary>
            user image id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorPoet.Published">
            <summary>
            published on website
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorSiteBanner">
            <summary>
            ganjoor.net site banner
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.RImage">
            <summary>
            banner image
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.RImageId">
            <summary>
            image id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.AlternateText">
            <summary>
            alternate text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.TargetUrl">
            <summary>
            target url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorSiteBanner.Active">
            <summary>
            active
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorTOC">
            <summary>
            ganjoor TOC options
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorVerse">
            <summary>
            Ganjoor Verse
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.Id">
            <summary>
            global id, auto generated (missing in Ganjoor Desktop database)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.PoemId">
            <summary>
            poem_id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.Poem">
            <summary>
            poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.VOrder">
            <summary>
            vorder
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.VersePosition">
            <summary>
            position
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerse.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorVerseTranslation">
            <summary>
            Verse translation
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseTranslation.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseTranslation.VerseId">
            <summary>
            verse id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseTranslation.Verse">
            <summary>
            verse
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseTranslation.TText">
            <summary>
            translated text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText">
            <summary>
            Verse Vorder / Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.Id">
            <summary>
            record id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.VORder">
            <summary>
            verse order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.OriginalText">
            <summary>
            original text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.Result">
            <summary>
            review result
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.GanjoorVerseVOrderText.ReviewNote">
            <summary>
            note
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.PoemMusicTrack">
            <summary>
            poem related track
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.PoemId">
            <summary>
            poem id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Poem">
            <summary>
            poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.TrackType">
            <summary>
            track type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.ArtistName">
            <summary>
            artist name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.ArtistUrl">
            <summary>
            artist url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.AlbumName">
            <summary>
            album name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.AlbumUrl">
            <summary>
            album url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.TrackName">
            <summary>
            track name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.TrackUrl">
            <summary>
            track url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.GanjoorTrackId">
            <summary>
            GanjoorTrack Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Singer">
            <summary>
            singer
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.SingerId">
            <summary>
            singer id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.GanjoorTrack">
            <summary>
            GanjoorTrack
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.GolhaTrackId">
            <summary>
            GolhaTrack Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.GolhaTrack">
            <summary>
            GolhaTrack
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Approved">
            <summary>
            approved
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.SuggestedById">
            <summary>
            Suggested by user id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.SuggestedBy">
            <summary>
            Suggested by user
            </summary>
            <remarks>
            approval user would be extractable from AuditLogs
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.ApprovalDate">
            <summary>
            approval date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.BrokenLink">
            <summary>
            broken link
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.Rejected">
            <summary>
            instead of deleting rejected songs keep track of them
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.RejectionCause">
            <summary>
            rejection cause
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.PoemMusicTrack.SongOrder">
            <summary>
            Song Order
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.PoemMusicTrackType">
            <summary>
            poem music track type
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.PoemMusicTrackType.All">
            <summary>
            all
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.PoemMusicTrackType.BeepTunesOrKhosousi">
            <summary>
            https://beeptunes.com/or https://khosousi.com
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.PoemMusicTrackType.Golha">
            <summary>
            http://www.golha.co.uk
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.PoemMusicTrackType.iTunes">
            <summary>
            itunes.com
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.PoemMusicTrackType.Spotify">
            <summary>
            https://open.spotify.com/
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.VersePosition">
            <summary>
            معنی فیلد position در جدول verse با توجه به مقادیر این ساختار داده مشخص می شود.
            </summary>
            <remarks>
            imported from Desktop Ganjoor source
            </remarks>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.Right">
            <summary>
            First Verse in a normal Beyt
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.Left">
            <summary>
            Second Verse in a normal Beyt
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.CenteredVerse1">
            <summary>
            First Verse or the only one in a Band Beyt
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.CenteredVerse2">
            <summary>
            Second Verse in a Band Beyt
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.Single">
            <summary>
            Free form verse
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.VersePosition.Paragraph">
            <summary>
            Non-poem paragraph
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel">
            <summary>
            Ganjoor Batch Naming Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel.StartWithNotIncludingSpaces">
            <summary>
            Start with (not including required spaces)
            </summary>
            <example>
            شمارهٔ 
            </example>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel.RemovePreviousPattern">
            <summary>
            remove previous pattern from start until any numbers
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel.RemoveSetOfCharacters">
            <summary>
            remove set of characters other than spaces from beginning and end
            </summary>
            <example>.-</example>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel.Simulate">
            <summary>
            simulate naming
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel">
            <summary>
            cat view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Title">
            <summary>
            text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.FullUrl">
            <summary>
            full url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Next">
            <summary>
            Next Category without Ancestors/Children/Poems info
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Previous">
            <summary>
            Previous Category without Ancestors/Children/Poems info
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Ancestors">
            <summary>
            ancestors
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Children">
            <summary>
            cat children
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCatViewModel.Poems">
            <summary>
            poems
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentAbuseReportViewModel">
            <summary>
            GanjoorCommentAbuseReport View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentAbuseReportViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentAbuseReportViewModel.ReasonCode">
            <summary>
            reason code for better grouping: offensive, bogus, other
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentAbuseReportViewModel.ReasonText">
            <summary>
            some explanotory text provided by reporter
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentAbuseReportViewModel.Comment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.AuthorName">
            <summary>
            author name (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.AuthorUrl">
            <summary>
            author url (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.CommentDate">
            <summary>
            comment date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.HtmlComment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.PublishStatus">
            <summary>
            status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.UserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.InReplyTo">
            <summary>
            in reply to
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.Poem">
            <summary>
            poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.MyComment">
            <summary>
            this can be used by clients
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.Verse1Id">
            <summary>
            verse1 id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.Verse2Id">
            <summary>
            verse2 id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.CoupletIndex">
            <summary>
            couplet index
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentFullViewModel.CoupletSummary">
            <summary>
            couplet summary
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel">
            <summary>
            new comment model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel.PoemId">
            <summary>
            Poem Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel.HtmlComment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel.InReplyToId">
            <summary>
            in reply to
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentPostViewModel.CoupletIndex">
            <summary>
            couplet index - send null for unrelated to a couplet comment
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel">
            <summary>
            GanjoorComment Summary View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.AuthorName">
            <summary>
            author name (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.AuthorUrl">
            <summary>
            author url (MySql imported field)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.CommentDate">
            <summary>
            comment date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.HtmlComment">
            <summary>
            comment
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.PublishStatus">
            <summary>
            status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.InReplyToId">
            <summary>
            in reply to
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.UserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.Replies">
            <summary>
            replies
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.MyComment">
            <summary>
            this can be used by clients
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.Verse1Id">
            <summary>
            verse1 id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.Verse2Id">
            <summary>
            verse2 id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.CoupletIndex">
            <summary>
            couplet index
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorCommentSummaryViewModel.CoupletSummary">
            <summary>
            couplet summary
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjooRhymeAnalysisResult">
            <summary>
            Rhyme Analysis Result
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjooRhymeAnalysisResult.Rhyme">
            <summary>
            rhyme
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjooRhymeAnalysisResult.FailVerse">
            <summary>
            the verse analysis stopped at
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel">
            <summary>
            modify page view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.HtmlText">
            <summary>
            Html Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.Rhythm">
            <summary>
            Poem Rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.RhymeLetters">
            <summary>
            rhyme letters
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.SourceName">
            <summary>
            source name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.SourceUrlSlug">
            <summary>
            source url slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.OldTag">
            <summary>
            old collection or book name for Saadi's ghazalyiat (طیبات، خواتیم و ....)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.OldTagPageUrl">
            <summary>
            old collection page url e.g /saadi/tayyebat
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel.Note">
            <summary>
            a description of the modfication
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel">
            <summary>
            Ganjoor Page View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.GanjoorPageType">
            <summary>
            Ganjoor Page Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.FullTitle">
            <summary>
            cat + parent cats title + title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.FullUrl">
            <summary>
            sample: /hafez/ghazal/sh1
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.HtmlText">
            <summary>
            Html Text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.PoetOrCat">
            <summary>
            Poet or Cat
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.Poem">
            <summary>
            Poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.SecondPoet">
            <summary>
            Second Poet
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.Next">
            <summary>
            next normal page
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageCompleteViewModel.Previous">
            <summary>
            previous normal page
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSnapshotSummaryViewModel">
            <summary>
            GanjoorPageSnapshot summary view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSnapshotSummaryViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSnapshotSummaryViewModel.RecordDate">
            <summary>
            record date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSnapshotSummaryViewModel.Note">
            <summary>
            a description of the modfication
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSummaryViewModel">
            <summary>
            Ganjoor Page: Summary View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSummaryViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSummaryViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPageSummaryViewModel.FullUrl">
            <summary>
            FullUrl
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel">
            <summary>
            a more complete GanjoorPoem View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.FullTitle">
            <summary>
            cat + parent cats title + title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.FullUrl">
            <summary>
            sample: /hafez/ghazal/sh1
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.PlainText">
            <summary>
            verses text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.HtmlText">
            <summary>
            verses text as html (ganjoor.net format)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.GanjoorMetre">
            <summary>
            metre
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.RhymeLetters">
            <summary>
            rhyme letters
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.SourceName">
            <summary>
            source name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.SourceUrlSlug">
            <summary>
            source url slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.OldTag">
            <summary>
            old collection or book name for Saadi's ghazalyiat (طیبات، خواتیم و ....)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.OldTagPageUrl">
            <summary>
            old collection page url e.g /saadi/tayyebat
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Category">
            <summary>
            category
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Next">
            <summary>
            Next Poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Previous">
            <summary>
            Previous Poem
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Verses">
            <summary>
            verses
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Recitations">
            <summary>
            Recitations
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Images">
            <summary>
            Images
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Songs">
            <summary>
            Songs
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCompleteViewModel.Comments">
            <summary>
            Comments
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel">
            <summary>
            poem correction view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Id">
            <summary>
            Correction Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.PoemId">
            <summary>
            poem Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.VerseOrderText">
            <summary>
            modified verses
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.OriginalTitle">
            <summary>
            original title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Rhythm">
            <summary>
            rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.OriginalRhythm">
            <summary>
            original rhythm
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Note">
            <summary>
            note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Date">
            <summary>
            date
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.UserId">
            <summary>
            user Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.UserNickname">
            <summary>
            nickname
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Reviewed">
            <summary>
            reviewed
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.ReviewDate">
            <summary>
            reviewdate
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.ReviewNote">
            <summary>
            review note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.Result">
            <summary>
            review result for title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel.RhythmResult">
            <summary>
            review result for rhythm
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel">
            <summary>
            poem summary
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.UrlSlug">
            <summary>
            url => slug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.Excerpt">
            <summary>
            excerpt text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.Rhythm">
            <summary>
            Rythm
            </summary>
            <example>مفاعیلن مفاعیلن فعولن</example>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemSummaryViewModel.RhymeLetters">
            <summary>
            rhyme letters
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel">
            <summary>
            poem translation view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.Language">
            <summary>
            language
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.PoemId">
            <summary>
            poem id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.Title">
            <summary>
            translated title
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.Published">
            <summary>
            published
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.Description">
            <summary>
            comments or description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.ContributerId">
            <summary>
            might be empty in anonymous apis
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.ContributerName">
            <summary>
            contributer name - might be empty in anonymous apis
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.DateTime">
            <summary>
            datetime
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.TranslatedVerses">
            <summary>
            translated verses
            </summary>
        </member>
        <member name="M:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel.ToString">
            <summary>
            to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetCompleteViewModel">
            <summary>
            Poet Complete Information 
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetCompleteViewModel.Poet">
            <summary>
            poet info
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetCompleteViewModel.Cat">
            <summary>
            poet cat info
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel">
            <summary>
            Ganjoor Poet
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.FullUrl">
            <summary>
            urlslug
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.RootCatId">
            <summary>
            root cat id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.Nickname">
            <summary>
            short name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.Published">
            <summary>
            published on website
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel.ImageUrl">
            <summary>
            image url
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel">
            <summary>
            report comment view model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel.CommentId">
            <summary>
            comment id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel.ReasonCode">
            <summary>
            reason code for better grouping: offensive, bogus, other
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel.ReasonText">
            <summary>
            some explanotory text provided by reporter
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorSearchVerseViewModel">
            <summary>
            Ganjoor Verse View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSearchVerseViewModel.Id">
            <summary>
            global id, auto generated (missing in Ganjoor Desktop database)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSearchVerseViewModel.VOrder">
            <summary>
            vorder
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSearchVerseViewModel.VersePosition">
            <summary>
            position
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSearchVerseViewModel.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerModifyViewModel">
            <summary>
            GanjoorSiteBanner PUT ViewModel
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerModifyViewModel.AlternateText">
            <summary>
            alternate text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerModifyViewModel.TargetUrl">
            <summary>
            target url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerModifyViewModel.Active">
            <summary>
            active
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel">
            <summary>
            Ganjoor Site Banner View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel.ImageUrl">
            <summary>
            image url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel.AlternateText">
            <summary>
            alternate text
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel.TargetUrl">
            <summary>
            target url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorSiteBannerViewModel.Active">
            <summary>
            active
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseTranslationViewModel">
            <summary>
            verse translation view mode
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseTranslationViewModel.Verse">
            <summary>
            verse
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseTranslationViewModel.TText">
            <summary>
            translated text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseViewModel">
            <summary>
            Ganjoor Verse View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseViewModel.Id">
            <summary>
            global id, auto generated (missing in Ganjoor Desktop database)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseViewModel.VOrder">
            <summary>
            vorder
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseViewModel.VersePosition">
            <summary>
            position
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.GanjoorVerseViewModel.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel">
            <summary>
            Ganjoor Poem related music track model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.PoemId">
            <summary>
            poem id
            </summary>a
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.TrackType">
            <summary>
            track type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.ArtistName">
            <summary>
            artist name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.ArtistUrl">
            <summary>
            artist url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.AlbumName">
            <summary>
            album name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.AlbumUrl">
            <summary>
            album url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.TrackName">
            <summary>
            track name
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.TrackUrl">
            <summary>
            track url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.Description">
            <summary>
            description
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.BrokenLink">
            <summary>
            broken link
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.GolhaTrackId">
            <summary>
            golha id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.Approved">
            <summary>
            approved
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.Rejected">
            <summary>
            instead of deleting rejected songs keep track of them
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.RejectionCause">
            <summary>
            rejection cause
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.SuggestedById">
            <summary>
            Suggested by user id (only filled for review)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.SuggestedByNickName">
            <summary>
            Suggested by user name (only filled for review)
            </summary>
        </member>
        <member name="M:RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel.ToString">
            <summary>
            to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImageType">
            <summary>
            Related Image Type
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImageType.MuseumLink">
            <summary>
            musueum.ganjoor.net link
            </summary>
        </member>
        <member name="F:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImageType.ExternalLink">
            <summary>
            external link
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage">
            <summary>
            Poem Related Images
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage.ImageOrder">
            <summary>
            Image Order
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage.PoemRelatedImageType">
            <summary>
            poem related image type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage.ThumbnailImageUrl">
            <summary>
            thumbnail image url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage.TargetPageUrl">
            <summary>
            target page url
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.PoemRelatedImage.AltText">
            <summary>
            alternate text
            </summary>
        </member>
        <member name="T:RMuseum.Models.Ganjoor.ViewModels.UserSongSuggestionsHistory">
            <summary>
            history of suggested songs by a user
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.UserSongSuggestionsHistory.Approved">
            <summary>
            approved
            </summary>
        </member>
        <member name="P:RMuseum.Models.Ganjoor.ViewModels.UserSongSuggestionsHistory.Rejected">
            <summary>
            rejected
            </summary>
        </member>
        <member name="T:RMuseum.Models.ImportJob.ImportJob">
            <summary>
            Import Job
            </summary>
        </member>
        <member name="T:RMuseum.Models.ImportJob.JobType">
            <summary>
            Job Type
            </summary>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.GanjoorAlbum">
            <summary>
            music catalogue album
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.SingerId">
            <summary>
            singer id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.Singer">
            <summary>
            singer
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorAlbum.Tracks">
            <summary>
            tracks
            </summary>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.GanjoorSinger">
            <summary>
            music catalogue singer
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.RImage">
            <summary>
            poet image
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.RImageId">
            <summary>
            user image id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorSinger.Albums">
            <summary>
            albums
            </summary>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.GanjoorTrack">
            <summary>
            music catalogue track
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.AlbumId">
            <summary>
            album id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.Album">
            <summary>
            album
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.Blocked">
            <summary>
            blocked from suggestion
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GanjoorTrack.BlockReason">
            <summary>
            reason
            </summary>
            <example>
            track is purely music and no singing is done through it
            </example>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.GolhaCollection">
            <summary>
            http://www.golha.co.uk offline catalogue
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaCollection.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaCollection.Name">
            <summary>
            name
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaCollection.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaCollection.Programs">
            <summary>
            programs
            </summary>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.GolhaProgram">
            <summary>
            Golha Program
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.GolhaCollectionId">
            <summary>
            GolhaCollection Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.GolhaCollection">
            <summary>
            GolhaCollection
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.ProgramOrder">
            <summary>
            program order
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.Mp3">
            <summary>
            mp3
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaProgram.Tracks">
            <summary>
            tracks
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.GolhaProgramId">
            <summary>
            GolhaProgram Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.GolhaProgram">
            <summary>
            GolhaProgram
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.TrackNo">
            <summary>
            track no
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.Timing">
            <summary>
            timing
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.SingerId">
            <summary>
            singer id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.Singer">
            <summary>
            singer
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.Blocked">
            <summary>
            blocked from suggestion
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.GolhaTrack.BlockReason">
            <summary>
            reason
            </summary>
            <example>
            track is purely music and no singing is done through it
            </example>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel">
            <summary>
            Golha Program View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel.ProgramOrder">
            <summary>
            program order
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaProgramViewModel.Mp3">
            <summary>
            mp3
            </summary>
        </member>
        <member name="T:RMuseum.Models.MusicCatalogue.ViewModels.GolhaTrackViewModel">
            <summary>
            Golha Track View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaTrackViewModel.Id">
            <summary>
            id
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaTrackViewModel.TrackNo">
            <summary>
            track no
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaTrackViewModel.Timing">
            <summary>
            timing
            </summary>
        </member>
        <member name="P:RMuseum.Models.MusicCatalogue.ViewModels.GolhaTrackViewModel.Title">
            <summary>
            title
            </summary>
        </member>
        <member name="T:RMuseum.Models.Note.RNoteType">
            <summary>
            Note Type
            </summary>
        </member>
        <member name="F:RMuseum.Models.Note.RNoteType.Private">
            <summary>
            private
            </summary>
        </member>
        <member name="F:RMuseum.Models.Note.RNoteType.Public">
            <summary>
            public
            </summary>
        </member>
        <member name="T:RMuseum.Models.Note.RUserNote">
            <summary>
            User Note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RAppUserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RAppUser">
            <summary>
            User
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RArtifactMasterRecordId">
            <summary>
            Master Record Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RArtifactMasterRecord">
            <summary>
            Master Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RArtifactItemRecordId">
            <summary>
            Item Record Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.RArtifactItemRecord">
            <summary>
            Item Record
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.Modified">
            <summary>
            Is Updated by User
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.LastModified">
            <summary>
            Last Modified
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.NoteType">
            <summary>
            Private / Public
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.HtmlContent">
            <summary>
            content
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.ReferenceNote">
            <summary>
            In Reply to Other Note
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.ReferenceNoteId">
            <summary>
            Reference Note Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.RUserNote.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:RMuseum.Models.Note.ViewModels.PostUserNote">
            <summary>
            New User Note For Artifact
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.PostUserNote.EntityId">
            <summary>
            Artifact / Item Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.PostUserNote.NoteType">
            <summary>
            Note Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.PostUserNote.Contents">
            <summary>
            Contents
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.PostUserNote.ReferenceNoteId">
            <summary>
            Reference Note Id
            </summary>
        </member>
        <member name="T:RMuseum.Models.Note.ViewModels.RUserNoteViewModel">
            <summary>
            Safe User Note View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RAppUserId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.UserName">
            <summary>
            User Name (FirstName + SureName)
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RUserImageId">
            <summary>
            user image id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.DateTime">
            <summary>
            DateTime
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.Modified">
            <summary>
            Is Updated by User
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.LastModified">
            <summary>
            Last Modified
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.NoteType">
            <summary>
            Private / Public
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.HtmlContent">
            <summary>
            content
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.ReferenceNoteId">
            <summary>
            Reference Note Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RelatedEntityName">
            <summary>
            Related Entity (Artifact/Item) Name
            </summary>
            <remarks>
            It is set only in cummulative api calls
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RelatedEntityImageId">
            <summary>
            Realated entity Image Id 
            </summary>
            <remarks>
            It is set only in cummulative api calls
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RelatedEntityFriendlyUrl">
            <summary>
            Realated entity Friendly Url (for artifact items it would be ParentFiendlyUrl/ItemFriendlyUrl )
            </summary>
            <remarks>
            It is set only in cummulative api calls
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.RelatedItemParentName">
            <summary>
            Related Item Artifact Name
            </summary>
            <remarks>
            It is set only in cummulative api calls
            </remarks>
        </member>
        <member name="P:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.Notes">
            <summary>
            child notes
            </summary>
            <remarks>
            It os set only in certain cases
            </remarks>
        </member>
        <member name="M:RMuseum.Models.Note.ViewModels.RUserNoteViewModel.PrepareNoteDateTime(System.DateTime)">
            <summary>
            prepare note datetime
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Models.UploadSession.UploadSession">
            <summary>
            Upload Session
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.SessionType">
            <summary>
            Session Type
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.User">
            <summary>
            User
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.UseId">
            <summary>
            User Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.UploadStartTime">
            <summary>
            Upload Start Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.UploadEndTime">
            <summary>
            Upload End Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.ProcessStartTime">
            <summary>
            Process Start Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.ProcessEndTime">
            <summary>
            Process End Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.ProcessProgress">
            <summary>
            Process Progress
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSession.UploadedFiles">
            <summary>
            Uploaded Files
            </summary>
        </member>
        <member name="T:RMuseum.Models.UploadSession.UploadSessionFile">
            <summary>
            Upload Session File
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.UploadSessionId">
            <summary>
            Upload Session Id
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.ContentDisposition">
            <summary>
            ContentDisposition
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.ContentType">
            <summary>
            ContentType
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.FileName">
            <summary>
            FileName
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.Length">
            <summary>
            Length
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.FilePath">
            <summary>
            File Path
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.MP3FileCheckSum">
            <summary>
            File check sum for mp3 files
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.ProcessResult">
            <summary>
            Process Result
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.UploadSessionFile.ProcessResultMsg">
            <summary>
            Process Result Message
            </summary>
        </member>
        <member name="T:RMuseum.Models.UploadSession.UploadSessionProcessStatus">
            <summary>
            Upload Session Process Status
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionProcessStatus.NotStarted">
            <summary>
            Not Started
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionProcessStatus.Started">
            <summary>
            Started
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionProcessStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="T:RMuseum.Models.UploadSession.UploadSessionType">
            <summary>
            Upload Session Types
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionType.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionType.NewAudio">
            <summary>
            New Audio
            </summary>
        </member>
        <member name="F:RMuseum.Models.UploadSession.UploadSessionType.ReplaceAudio">
            <summary>
            New or replace audio
            </summary>
        </member>
        <member name="T:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel">
            <summary>
            Uploaded Item View Model
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.FileName">
            <summary>
            filename
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.ProcessResult">
            <summary>
            process result
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.ProcessResultMsg">
            <summary>
            process result message
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.UploadEndTime">
            <summary>
            Upload End Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.UserName">
            <summary>
            Upload User Name
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.ProcessStartTime">
            <summary>
            Process Start Time
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.ProcessProgress">
            <summary>
            progress progress
            </summary>
        </member>
        <member name="P:RMuseum.Models.UploadSession.ViewModels.UploadedItemViewModel.ProcessEndTime">
            <summary>
            process end time
            </summary>
        </member>
        <member name="T:RMuseum.Services.IArtifactService">
            <summary>
            Artifact Item Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetAll(RSecurityBackend.Models.Generic.PagingParameterModel,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get all  artifacts (including CoverImage info but not items or attributes info) 
            </summary>
            <param name="paging"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetByTagValue(System.String,System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get tagged publish artifacts (including CoverImage info but not items or tagibutes info)
            </summary>
            <param name="tagUrl"></param>
            <param name="valueUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetByFriendlyUrl(System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            gets specified artifact info (including CoverImage + images +  attributes)
            </summary>
            <param name="friendlyUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetByFriendlyUrlFilterItemsByTag(System.String,RMuseum.Models.Artifact.PublishStatus[],System.String,System.String)">
            <summary>
            gets specified artifact info (including CoverImage + images +  tagibutes)
            </summary>
            <param name="friendlyUrl"></param>
            <param name="statusArray"></param>
            <param name="tagFriendlyUrl"></param>
            <param name="tagValueFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditMasterRecord(RMuseum.Models.Artifact.RArtifactMasterRecord,System.Boolean,System.Boolean)">
            <summary>
            edit master record
            </summary>
            <param name="edited"></param>
            <param name="canChangeStatusToAwaiting"></param>
            <param name="canPublish"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.SetArtifactCoverItemIndex(System.Guid,System.Int32)">
            <summary>
            Set Artifact Cover Item Index
            </summary>
            <param name="artifactId"></param>
            <param name="itemIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetTagBundleByFiendlyUrl(System.String)">
            <summary>
            get tag bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetMaxArtifactLastModified">
            <summary>
            get max lastmodified artifact date for caching purposes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetAllTags(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get all  tags 
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetTagByFriendlyUrl(System.String)">
            <summary>
            get tag bu friendly url
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.AddTag(System.String)">
            <summary>
            add tag
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditTag(RMuseum.Models.Artifact.RTag)">
            <summary>
            edit tag
            </summary>
            <param name="edited"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditTagOrderBasedOnArtifact(System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tags based on their position in artifacts
            </summary>
            <param name="tagId"></param>
            <param name="artifactId"></param>
            <param name="up">true => up, false => down</param>
            <returns>the other tag which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditTagOrderBasedOnItem(System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tags based on their position in artifact items
            </summary>
            <param name="tagId"></param>
            <param name="itemId"></param>
            <param name="up">true => up, false => down</param>
            <returns>the other tag which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.TagArtifact(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add artifact tag value
            </summary>
            <param name="artifactId"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditTagValueOrder(System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tag values based on their position in an artifact
            </summary>
            <param name="artifactId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>        
            <param name="up">true => up, false => down</param>
            <returns>the other tag value which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditItemTagValueOrder(System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tag values based on their position in an item
            </summary>
            <param name="itemId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>        
            <param name="up">true => up, false => down</param>
            <returns>the other tag value which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetTagValueBundleByFiendlyUrl(System.String,System.String)">
            <summary>
            get tag value bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <param name="valueUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetTagValueByFriendlyUrl(System.Guid,System.String)">
            <summary>
            get tag value by frindly url
            </summary>
            <param name="tagId"></param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditTagValue(System.Guid,RMuseum.Models.Artifact.RTagValue,System.Boolean)">
            <summary>
            edit artifact tagibute value
            </summary>
            <param name="artifactId"></param>
            <param name="edited"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.UnTagArtifact(System.Guid,System.Guid)">
            <summary>
            remove artfiact tag value
            </summary>
            <param name="artifactId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.TagItem(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add item tag value
            </summary>
            <param name="itemId"></param>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditItemTagValue(System.Guid,RMuseum.Models.Artifact.RTagValue,System.Boolean)">
            <summary>
            edit item tag value
            </summary>
            <param name="itemId"></param>
            <param name="edited"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.UnTagItem(System.Guid,System.Guid)">
            <summary>
            remove item tag value
            </summary>
            <param name="itemId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactItemByFrienlyUrl(System.String,System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            gets specified artifact item info (including images + attributes) 
            </summary>
            <param name="artifactUrl"></param>
            <param name="itemUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.Add(System.String,System.String,System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile,System.String,System.IO.Stream)">
            <summary>
            add new artifact
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="srcurl"></param>
            <param name="pictitle"></param>
            <param name="picdescription"></param>
            <param name="file"></param>
            <param name="picsrcurl"></param>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.Import(System.String,System.String,System.String,System.String)">
            <summary>
            import from external resources
            </summary>
            <param name="srcType">loc/princeton/harvard/qajarwomen/hathitrust/penn/cam/bl/folder/walters/cbl</param>
            <param name="resourceNumber">119</param>
            <param name="friendlyUrl">golestan-baysonghori</param>
            <param name="resourcePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.RescheduleJobs">
            <summary>
            reschedule jobs
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.ReExamineLocDownloads">
            <summary>
            due to a bug in loc json outputs some artifacts with more than 1000 pages were downloaded incompletely
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetImportJobs(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            import jobs
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.BookmarkArtifact(System.Guid,System.Guid,RMuseum.Models.Bookmark.RBookmarkType)">
            <summary>
            Bookmark Artifact
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactUserBookmarks(System.Guid,System.Guid)">
            <summary>
            get artifact user bookmarks
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.BookmarkItem(System.Guid,System.Guid,RMuseum.Models.Bookmark.RBookmarkType)">
            <summary>
            Bookmark Item
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GeItemUserBookmarks(System.Guid,System.Guid)">
            <summary>
            get item user bookmarks
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.UpdateUserBookmark(System.Guid,System.String)">
            <summary>
            update bookmark note
            </summary>
            <param name="bookmarkId"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.DeleteUserBookmark(System.Guid)">
            <summary>
            delete user bookmark         
            /// </summary>
            <param name="bookmarkId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetBookmarks(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,RMuseum.Models.Bookmark.RBookmarkType,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get user bookmarks (artifacts and items)
            </summary>
            <param name="paging"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.AddUserNoteToArtifact(System.Guid,System.Guid,RMuseum.Models.Note.RNoteType,System.String,System.Nullable{System.Guid})">
            <summary>
            Add Note to Artifact
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="noteContents"></param>
            <param name="referenceNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.AddUserNoteToArtifactItem(System.Guid,System.Guid,RMuseum.Models.Note.RNoteType,System.String,System.Nullable{System.Guid})">
            <summary>
            Add Note to Artifact Item
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="noteContents"></param>
            <param name="referenceNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.EditUserNote(System.Guid,System.Nullable{System.Guid},System.String)">
            <summary>
            Edit Note
            </summary>
            <param name="noteId"></param>
            <param name="userId">sending null here means user is a moderator</param>
            <param name="noteContents"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.DeleteUserNote(System.Guid,System.Nullable{System.Guid})">
            <summary>
            delete note
            </summary>
            <param name="noteId"></param>
            <param name="userId">sending null here means user is a moderator or the note is being deleted in a recursive delete of referenced notes</param>
            <returns>list of notes deleted</returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactUserNotes(System.Guid,System.Guid)">
            <summary>
            get artifact private user notes
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactPublicNotes(System.Guid)">
            <summary>
            get artifact public user notes
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactItemUserNotes(System.Guid,System.Guid)">
            <summary>
            get item artifact private user notes
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetArtifactItemPublicNotes(System.Guid)">
            <summary>
            get item artifact item public user notes
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetUserNotes(System.Guid,RSecurityBackend.Models.Generic.PagingParameterModel,RMuseum.Models.Note.RNoteType,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            Get All USer Notes
            </summary>
            <param name="userId"></param>
            <param name="paging"></param>
            <param name="type"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetAllPublicNotes(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            Get All Public Notes
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.SuggestGanjoorLink(System.Guid,RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion)">
            <summary>
            suggest ganjoor link
            </summary>
            <param name="userId"></param>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetUnsynchronizedSuggestedLinksCount">
            <summary>
            get Unsynchronized image count
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetNextUnsynchronizedSuggestedLinkWithAlreadySynchedOneForPoem(System.Int32)">
            <summary>
            finds what the method name suggests
            </summary>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetSuggestedLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested ganjoor links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.ReviewSuggestedLink(System.Guid,System.Guid,RMuseum.Models.GanjoorIntegration.ReviewResult)">
            <summary>
            Review Suggested Link
            </summary>
            <param name="linkId"></param>
            <param name="userId"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.AddTOCForSuggestedLinks">
            <summary>
            Temporary api
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.SynchronizeSuggestedLink(System.Guid,System.Boolean)">
            <summary>
            Synchronize suggested link
            </summary>
            <param name="linkId"></param>
            <param name="displayOnPage"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.GetSuggestedPinterestLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested pinterest links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.SuggestPinterestLink(System.Guid,RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion)">
            <summary>
            suggest pinterest link
            </summary>
            <param name="userId"></param>
            <param name="suggestion"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.ReviewSuggestedPinterestLink(System.Guid,System.Guid,System.String,RMuseum.Models.GanjoorIntegration.ReviewResult,System.String,System.String)">
            <summary>
            Review Suggested Pinterest Link
            </summary>
            <param name="linkId"></param>
            <param name="userId"></param>
            <param name="altText"></param>
            <param name="result"></param>
            <param name="reviewDesc"></param>
            <param name="imageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.SynchronizeSuggestedPinterestLink(System.Guid)">
            <summary>
            Synchronize suggested pinterest link
            </summary>
            <param name="linkId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.RemoveArtifactHavingNoNoteAndBookmarks(System.Guid,System.Boolean)">
            <summary>
            an incomplete prototype for removing artifacts
            </summary>
            <param name="artifactId"></param>
            <param name="checkJobs"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IArtifactService.StartFillingGanjoorLinkOriginalSources">
            <summary>
            start filling GanjoorLink table OriginalSource values
            </summary>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.IDonationService">
            <summary>
            donation service
            </summary>
        </member>
        <member name="M:RMuseum.Services.IDonationService.AddDonation(System.Guid,RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel)">
            <summary>
            new donation
            </summary>
            <param name="editingUserId"></param>
            <param name="donation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.DeleteDonation(System.Guid,System.Int32)">
            <summary>
            delete donation
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.UpdateDonation(System.Guid,System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update donation
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <param name="updateModel"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.AddExpense(System.Guid,RMuseum.Models.Accounting.GanjoorExpense)">
            <summary>
            new expense
            </summary>
            <param name="editingUserId"></param>
            <param name="expense"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.UpdateExpense(System.Guid,System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update expense
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <param name="updateModel"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.DeleteExpense(System.Guid,System.Int32)">
            <summary>
            delete expense
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.InitializeRecords">
            <summary>
            parse html of https://ganjoor.net/donate/ and fill the records
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.RegenerateDonationsPage(System.Guid,System.String)">
            <summary>
            regenerate donations page
            </summary>
            <param name="editingUserId"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.GetDonations">
            <summary>
            returns all donations
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.GetDonation(System.Int32)">
            <summary>
            get donation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.GetExpenses">
            <summary>
            returns all expenses
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IDonationService.GetExpense(System.Int32)">
            <summary>
            get expense by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.IDonationService.ShowAccountInfo">
            <summary>
            Show Donating Information (temporary switch off/on)
            </summary>
        </member>
        <member name="T:RMuseum.Services.IGanjoorService">
            <summary>
            Ganjoor Poems Content Privider Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoets(System.Boolean,System.Boolean)">
            <summary>
            Get List of poets
            </summary>
            <param name="published"></param>
            <param name="includeBio"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoetById(System.Int32)">
            <summary>
            get poet by idCra
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoetByUrl(System.String)">
            <summary>
            get poet by url
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoetImageIdByUrl(System.String)">
            <summary>
            poet image id by url
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetCatById(System.Int32,System.Boolean)">
            <summary>
            get cat by id
            </summary>
            <param name="id"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetCatByUrl(System.String,System.Boolean)">
            <summary>
            get cat by url
            </summary>
            <param name="url"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPageByUrl(System.String,System.Boolean)">
            <summary>
            get page by url
            </summary>
            <param name="url"></param>
            <param name="catPoems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPageUrlById(System.Int32)">
            <summary>
            get page url by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DeletePageAsync(System.Int32)">
            <summary>
            delete page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemById(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get Poem By Id
            </summary>
            <param name="id"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes"></param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs"></param>
            <param name="comments"></param>
            <param name="verseDetails"></param>
            <param name="navigation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemByUrl(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get Poem By Url
            </summary>
            <param name="url"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes"></param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs"></param>
            <param name="comments"></param>
            <param name="verseDetails"></param>
            <param name="navigation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemRecitations(System.Int32)">
            <summary>
            get poem recitations (PlainText/HtmlText are intentionally empty)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemImages(System.Int32)">
            <summary>
            get poem images by id (some fields are intentionally field with blank or null),
            EntityImageId : the most important data field, image url is {WebServiceUrl.Url}/api/images/thumb/{EntityImageId}.jpg or {WebServiceUrl.Url}/api/images/norm/{EntityImageId}.jpg
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemSongs(System.Int32,System.Boolean,RMuseum.Models.Ganjoor.PoemMusicTrackType)">
            <summary>
            get poem related songs
            </summary>
            <param name="id"></param>
            <param name="approved"></param>
            <param name="trackType"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemComments(System.Int32,System.Guid,System.Nullable{System.Int32})">
            <summary>
            get poem comments
            </summary>
            <param name="poemId"></param>
            <param name="userId"></param>
            <param name="coupletIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.SuggestPoemCorrection(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            send poem corrections
            </summary>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetLastUnreviewedUserCorrectionForPoem(System.Guid,System.Int32)">
            <summary>
            last unreviewed user correction for a poem
            </summary>
            <param name="userId"></param>
            <param name="poemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetUserCorrections(System.Guid,RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get user corrections
            </summary>
            <param name="userId"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetPoemEffectiveCorrections(System.Int32,RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            effective corrections for poem
            </summary>
            <param name="poemId"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetCorrectionById(System.Int32)">
            <summary>
            get correction by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DeletePoemCorrections(System.Guid,System.Int32)">
            <summary>
            delete unreviewed user corrections for a poem
            </summary>
            <param name="userId"></param>
            <param name="poemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetNextUnreviewedCorrection(System.Int32)">
            <summary>
            get next unreviewed correction
            </summary>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetUnreviewedCorrectionCount">
            <summary>
            unreview correction count
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ModeratePoemCorrection(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            moderate poem correction
            </summary>
            <param name="userId"></param>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetNextUnreviewedSong(System.Int32,System.Guid)">
            <summary>
            next unreviewed track
            </summary>
            <param name="skip"></param>
            <param name="suggestedById"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetUserSongsSuggestionsStatistics(System.Guid)">
            <summary>
            get track of user song suggestions
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.SuggestSong(System.Guid,RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            suggest song
            </summary>
            <param name="userId"></param>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetUnreviewedSongsCount(System.Guid)">
            <summary>
            get unreviewed count
            </summary>
            <param name="suggestedById"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ReviewSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            review song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DirectInsertSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            direct insert song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.NewComment(System.Guid,System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            new comment
            </summary>
            <param name="userId"></param>
            <param name="ip"></param>
            <param name="poemId"></param>
            <param name="content"></param>
            <param name="inReplyTo"></param>
            <param name="coupletIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.EditMyComment(System.Guid,System.Int32,System.String)">
            <summary>
            update user's own comment
            </summary>
            <param name="userId"></param>
            <param name="commentId"></param>
            <param name="htmlComment"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DeleteModerateComment(System.Int32)">
            <summary>
            delete a reported  comment
            </summary>
            <param name="reportId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DeleteMyComment(System.Guid,System.Int32)">
            <summary>
            delete user own comment
            </summary>
            <param name="userId"></param>
            <param name="commentId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetRecentComments(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,System.Boolean)">
            <summary>
            get recent comments
            </summary>
            <param name="paging"></param>
            <param name="filterUserId">Guid.Empty</param>
            <param name="onlyPublished"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ReportComment(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel)">
            <summary>
            report a comment
            </summary>
            <param name="userId"></param>
            <param name="report"></param>
            <returns>id of report record</returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.DeleteReport(System.Int32)">
            <summary>
            delete a report
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetReportedComments(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            Get list of reported comments
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetSimilarPoems(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get Similar Poems accroding to prosody and rhyme informations
            </summary>
            <param name="paging"></param>
            <param name="metre"></param>
            <param name="rhyme"></param>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.UpdatePageAsync(System.Int32,System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel)">
            <summary>
            modify page
            </summary>
            <param name="id"></param>
            <param name="editingUserId"></param>
            <param name="pageData"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.UpdatePoetAsync(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel,System.Guid)">
            <summary>
            modify poet
            </summary>
            <param name="poet"></param>
            <param name="editingUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.AddPoetAsync(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel,System.Guid)">
            <summary>
            create new poet
            </summary>
            <param name="poet"></param>
            <param name="editingUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartDeletePoet(System.Int32)">
            <summary>
            delete poet
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ChangePoetImageAsync(System.Int32,System.Guid)">
            <summary>
            chaneg poet image
            </summary>
            <param name="poetId"></param>
            <param name="imageId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetGanjoorMetres">
            <summary>
            returns metre list (ordered by Rhythm)
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.Faal(System.Int32,System.Boolean)">
            <summary>
            get a random poem (2 = from hafez)
            </summary>
            <param name="poetId"></param>
            <param name="recitation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ImportFromSqlite(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            import from sqlite
            </summary>
            <param name="poetId"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ApplyCorrectionsFromSqlite(System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Apply corrections from sqlite
            </summary>
            <param name="poetId"></param>
            <param name="file"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ExportToSqlite(System.Int32)">
            <summary>
            export to sqlite
            </summary>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartBatchGenerateGDBFiles">
            <summary>
            start generating gdb files
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.ImportFromMySql">
            <summary>
            import GanjoorPage entity data from MySql
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.HealthCheckContents">
            <summary>
            examine site pages for broken links
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.RegerneratePoemsPlainText">
            <summary>
            separate verses in poem.PlainText with  Environment.NewLine instead of SPACE
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.CacheCleanForPageById(System.Int32)">
            <summary>
            clean cache for paeg by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.CacheCleanForPageByUrl(System.String)">
            <summary>
            clean cache for page by url
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.CacheCleanForComment(System.Int32)">
            <summary>
            clean cache for page by comment
            </summary>
            <param name="commentId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetOlderVersionsOfPage(System.Int32)">
            <summary>
            page modifications history
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GetOldVersionOfPage(System.Int32)">
            <summary>
            get old version
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.Search(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Search
            </summary>
            <param name="paging"></param>
            <param name="term"></param>
            <param name="poetId"></param>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.BatchRenameCatPoemTitles(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel,System.Guid)">
            <summary>
            batch rename
            </summary>
            <param name="catId"></param>
            <param name="model"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.FindPoemRhyme(System.Int32)">
            <summary>
            find poem rhyme
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.FindCategoryPoemsRhymes(System.Int32,System.Boolean)">
            <summary>
            find category poem rhymes
            </summary>
            <param name="catId"></param>
            <param name="retag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.FindPoemRhythm(System.Int32)">
            <summary>
            find poem rhythm
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.FindCategoryPoemsRhythms(System.Int32,System.Boolean,System.String)">
            <summary>
            find category poem rhymes
            </summary>
            <param name="catId"></param>
            <param name="retag"></param>
            <param name="rhythm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.GenerateTableOfContents(System.Int32,RMuseum.Models.Ganjoor.GanjoorTOC)">
            <summary>
            generate category TOC
            </summary>
            <param name="catId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartGeneratingSubCatsTOC(System.Guid,System.Int32)">
            <summary>
            start generating sub cats TOC
            </summary>
            <param name="userId"></param>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartBuildingSitemap">
            <summary>
            build sitemap
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartUpdatingStatsPage(System.Guid)">
            <summary>
            start updating stats page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.StartUpdatingMundexPage(System.Guid)">
            <summary>
            start updating mundex page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorService.BreakPoemAsync(System.Int32,System.Int32,System.Guid)">
            <summary>
            break a poem from a verse forward
            </summary>
            <param name="poemId"></param>
            <param name="vOrder"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.IGanjoorTranslationService">
            <summary>
            translation service implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.AddLanguageAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            add language
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.UpdateLangaugeAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            update an existing language
            </summary>
            <param name="updated"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.DeleteLangaugeAsync(System.Int32)">
            <summary>
            delete language
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.GetLanguageAsync(System.Int32)">
            <summary>
            get langauge by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.GetLanguagesAsync">
            <summary>
            get all languages
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.AddPoemTranslation(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel)">
            <summary>
            add or update poem translation
            </summary>
            <param name="translation"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.GetPoemTranslationsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            get translation
            </summary>
            <param name="langId">-1 all languages</param>
            <param name="poemId"></param>
            <param name="onlyPublished"></param>
            <param name="includeUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IGanjoorTranslationService.GetLastUserContributedLanguage(System.Guid)">
            <summary>
            get last language the user contributed to its translation
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.ArtifactService">
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
            <summary>
            IArtifactService implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartFillingGanjoorLinkOriginalSources">
            <summary>
            start filling GanjoorLink table OriginalSource values
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromHarvardDirectly(System.String,System.String,System.String)">
            <summary>
            import from http://www.qajarwomen.org
            </summary>
            <param name="hardvardResourceNumber">43117279</param>
            <param name="friendlyUrl">atame</param>
            <param name="srcUrl">http://www.qajarwomen.org/fa/items/1018A10.html</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromBritishLibrary(System.String,System.String)">
            <summary>
            from http://www.bl.uk
            </summary>
            <param name="resourceNumber">grenville_xli_f001r</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromCambridge(System.String,System.String)">
            <summary>
            from http://cudl.lib.cam.ac.uk
            </summary>
            <param name="resourceNumber">MS-RAS-00258</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromChesterBeatty(System.String,System.String)">
            <summary>
            import from https://viewer.cbl.ie
            </summary>
            <param name="resourceNumber">119</param>
            <param name="friendlyUrl">golestan-baysonghori</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromHarvard(System.String,System.String)">
            <summary>
            from https://curiosity.lib.harvard.edu
            </summary>
            <param name="url">example: https://curiosity.lib.harvard.edu/islamic-heritage-project/catalog/40-990114893240203941</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromHathiTrust(System.String,System.String)">
            <summary>
            from https://catalog.hathitrust.org
            </summary>
            <param name="resourceNumber">006814127</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromTheLibraryOfCongress(System.String,System.String,System.String)">
            <summary>
            from https://www.loc.gov
            </summary>
            <param name="resourceNumber">
            <example>
            m084
            </example>
            </param>
            <param name="friendlyUrl">
            <example>
            boostan1207
            </example>
            </param>
            <param name="resourcePrefix"></param>
            <example>
            plmp
            </example>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.ReExamineLocDownloads">
            <summary>
            due to a bug in loc json outputs some artifacts with more than 1000 pages were downloaded incompletely
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromPenLibraries(System.String,System.String)">
            <summary>
            from http://www.library.upenn.edu/
            </summary>
            <param name="resourceNumber">MEDREN_9949222153503681</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromServerFolder(System.String,System.String,System.String)">
            <summary>
            import from server folder
            </summary>
            <param name="folderPath">C:\Tools\batches\florence</param>
            <param name="friendlyUrl">shahname-florence</param>
            <param name="srcUrl">https://t.me/dr_khatibi_abolfazl/888</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromWalters(System.String,System.String)">
            <summary>
            from http://www.thedigitalwalters.org/01_ACCESS_WALTERS_MANUSCRIPTS.html
            </summary>
            <param name="resourceNumber">W619</param>
            <param name="friendlyUrl">golestan-walters-01</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.StartImportingFromPrinceton(System.String,System.String)">
            <summary>
            from http://pudl.princeton.edu/
            </summary>
            <param name="resourceNumber">dj52w476m</param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetAll(RSecurityBackend.Models.Generic.PagingParameterModel,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get all artifacts (including CoverImage info but not items or tagibutes info)
            </summary>
            <param name="paging"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetByTagValue(System.String,System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get tagged publish artifacts (including CoverImage info but not items or tagibutes info) 
            </summary>
            <param name="tagUrl"></param>
            <param name="valueUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetByFriendlyUrl(System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            gets specified artifact info (including CoverImage + images +  tagibutes)
            </summary>
            <param name="friendlyUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetByFriendlyUrlFilterItemsByTag(System.String,RMuseum.Models.Artifact.PublishStatus[],System.String,System.String)">
            <summary>
            gets specified artifact info (including CoverImage + images +  tagibutes)
            </summary>
            <param name="friendlyUrl"></param>
            <param name="statusArray"></param>
            <param name="tagFriendlyUrl"></param>
            <param name="tagValueFriendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditMasterRecord(RMuseum.Models.Artifact.RArtifactMasterRecord,System.Boolean,System.Boolean)">
            <summary>
            edit master record
            </summary>
            <param name="edited"></param>
            <param name="canChangeStatusToAwaiting"></param>
            <param name="canPublish"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.SetArtifactCoverItemIndex(System.Guid,System.Int32)">
            <summary>
            Set Artifact Cover Item Index
            </summary>
            <param name="artifactId"></param>
            <param name="itemIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetTagBundleByFiendlyUrl(System.String)">
            <summary>
            get tag bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetMaxArtifactLastModified">
            <summary>
            get max lastmodified artifact date for caching purposes
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetAllTags(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get all  tags 
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetTagByFriendlyUrl(System.String)">
            <summary>
            get tag bu friendly url
            </summary>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetTagValueByFriendlyUrl(System.Guid,System.String)">
            <summary>
            get tag value by frindly url
            </summary>
            <param name="tagId"></param>
            <param name="friendlyUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.AddTag(System.String)">
            <summary>
            add tag
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditTag(RMuseum.Models.Artifact.RTag)">
            <summary>
            edit tag
            </summary>
            <param name="edited"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.UpdateTaggedItems(RMuseum.Models.Artifact.RTag)">
            <summary>
            changes LastModified field value for tagged artifacts and items
            </summary>
            <param name="tag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditTagOrderBasedOnArtifact(System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tags based on their position in artifacts
            </summary>
            <param name="tagId"></param>
            <param name="artifactId"></param>
            <param name="up">true => up, false => down</param>
            <returns>the other tag which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditTagOrderBasedOnItem(System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tags based on their position in artifact items
            </summary>
            <param name="tagId"></param>
            <param name="itemId"></param>
            <param name="up">true => up, false => down</param>
            <returns>the other tag which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetTagValueBundleByFiendlyUrl(System.String,System.String)">
            <summary>
            get tag value bundle by frindly url
            </summary>
            <param name="friendlyUrl"></param>
            <param name="valueUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.TagArtifact(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add artifact tag value
            </summary>
            <param name="artifactId"></param>
            <param name="rTag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.UnTagArtifact(System.Guid,System.Guid)">
            <summary>
            remove artfiact tag value
            </summary>
            <param name="artifactId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditTagValue(System.Guid,RMuseum.Models.Artifact.RTagValue,System.Boolean)">
            <summary>
            edit artifact tag value
            </summary>
            <param name="artifactId"></param>
            <param name="edited"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.TagItem(System.Guid,RMuseum.Models.Artifact.RTag)">
            <summary>
            add item tag value
            </summary>
            <param name="itemId"></param>
            <param name="rTag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.UnTagItem(System.Guid,System.Guid)">
            <summary>
            remove item tag value
            </summary>
            <param name="itemId"></param>
            <param name="tagValueId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditItemTagValue(System.Guid,RMuseum.Models.Artifact.RTagValue,System.Boolean)">
            <summary>
            edit item tagibute value
            </summary>
            <param name="itemtId"></param>
            <param name="edited"></param>
            <param name="global">apply on all same value tags</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditTagValueOrder(System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tag values based on their position in an artifact
            </summary>
            <param name="artifactId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>        
            <param name="up">true => up, false => down</param>
            <returns>the other tag value which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditItemTagValueOrder(System.Guid,System.Guid,System.Guid,System.Boolean)">
            <summary>
            changes order of tag values based on their position in an item
            </summary>
            <param name="itemId"></param>
            <param name="tagId"></param>
            <param name="valueId"></param>        
            <param name="up">true => up, false => down</param>
            <returns>the other tag value which its Order has been changed</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactItemByFrienlyUrl(System.String,System.String,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            gets specified artifact item info (including images + tagibutes)
            </summary>
            <param name="artifactUrl"></param>
            <param name="itemUrl"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.Add(System.String,System.String,System.String,System.String,System.String,Microsoft.AspNetCore.Http.IFormFile,System.String,System.IO.Stream)">
            <summary>
            add new artifact
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="srcurl"></param>
            <param name="pictitle"></param>
            <param name="picdescription"></param>
            <param name="file"></param>
            <param name="picsrcurl"></param>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.Import(System.String,System.String,System.String,System.String)">
            <summary>
            import from external resources
            </summary>
            <param name="srcType">loc/princeton/harvard/qajarwomen/hathitrust/penn/cam/bl/folder/walters/cbl</param>
            <param name="resourceNumber">119</param>
            <param name="friendlyUrl">golestan-baysonghori</param>
            <param name="resourcePrefix"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.RescheduleJobs">
            <summary>
            reschedule jobs
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.RemoveArtifactHavingNoNoteAndBookmarks(System.Guid,System.Boolean)">
            <summary>
            an incomplete prototype for removing artifacts
            </summary>
            <param name="artifactId"></param>
            <param name="checkJobs"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetImportJobs(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
             import jobs
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.BookmarkArtifact(System.Guid,System.Guid,RMuseum.Models.Bookmark.RBookmarkType)">
            <summary>
            Bookmark Artifact
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactUserBookmarks(System.Guid,System.Guid)">
            <summary>
            get artifact user bookmarks
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.BookmarkItem(System.Guid,System.Guid,RMuseum.Models.Bookmark.RBookmarkType)">
            <summary>
            Bookmark Item
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GeItemUserBookmarks(System.Guid,System.Guid)">
            <summary>
            get item user bookmarks
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.UpdateUserBookmark(System.Guid,System.String)">
            <summary>
            update bookmark note
            </summary>
            <param name="bookmarkId"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.DeleteUserBookmark(System.Guid)">
            <summary>
            delete user bookmark         
            /// </summary>
            <param name="bookmarkId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetBookmarks(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,RMuseum.Models.Bookmark.RBookmarkType,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            get user bookmarks (artifacts and items)
            </summary>
            <param name="paging"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.AddUserNoteToArtifact(System.Guid,System.Guid,RMuseum.Models.Note.RNoteType,System.String,System.Nullable{System.Guid})">
            <summary>
            Add Note to Artifact
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="noteContents"></param>
            <param name="referenceNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.AddUserNoteToArtifactItem(System.Guid,System.Guid,RMuseum.Models.Note.RNoteType,System.String,System.Nullable{System.Guid})">
            <summary>
            Add Note to Artifact Item
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <param name="type"></param>
            <param name="noteContents"></param>
            <param name="referenceNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.EditUserNote(System.Guid,System.Nullable{System.Guid},System.String)">
            <summary>
            Edit Note
            </summary>
            <param name="noteId"></param>
            <param name="userId"></param>
            <param name="noteContents"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.DeleteUserNote(System.Guid,System.Nullable{System.Guid})">
            <summary>
            delete note
            </summary>
            <param name="noteId"></param>
            <param name="userId">sending null here means user is a moderator or the note is being deleted in a recursive delete of referenced notes</param>
            <returns>list of notes deleted</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactUserNotes(System.Guid,System.Guid)">
            <summary>
            get artifact private user notes
            </summary>
            <param name="artifactId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService._GetArtifactPublicNotes(System.Guid,System.Nullable{System.Guid})">
            <summary>
            recursvie call to build notes tree
            </summary>
            <param name="artifactId"></param>
            <param name="parentNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactPublicNotes(System.Guid)">
            <summary>
            get artifact public user notes
            </summary>
            <param name="artifactId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactItemUserNotes(System.Guid,System.Guid)">
            <summary>
            get item artifact private user notes
            </summary>
            <param name="itemId"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService._GetArtifactItemPublicNotes(System.Guid,System.Nullable{System.Guid})">
            <summary>
            recursvie call to build notes tree for iten
            </summary>
            <param name="itemId"></param>
            <param name="parentNoteId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetArtifactItemPublicNotes(System.Guid)">
            <summary>
            get item artifact item public user notes
            </summary>
            <param name="itemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetUserNotes(System.Guid,RSecurityBackend.Models.Generic.PagingParameterModel,RMuseum.Models.Note.RNoteType,RMuseum.Models.Artifact.PublishStatus[])">
            <summary>
            Get All USer Notes
            </summary>
            <param name="userId"></param>
            <param name="paging"></param>
            <param name="type"></param>
            <param name="statusArray"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetAllPublicNotes(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            Get All Public Notes
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.SuggestGanjoorLink(System.Guid,RMuseum.Models.GanjoorIntegration.ViewModels.LinkSuggestion)">
            <summary>
            suggest ganjoor link
            </summary>
            <param name="userId"></param>
            <param name="link"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetUnsynchronizedSuggestedLinksCount">
            <summary>
            get Unsynchronized image count
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetNextUnsynchronizedSuggestedLinkWithAlreadySynchedOneForPoem(System.Int32)">
            <summary>
            finds what the method name suggests
            </summary>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetSuggestedLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested ganjoor links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.ReviewSuggestedLink(System.Guid,System.Guid,RMuseum.Models.GanjoorIntegration.ReviewResult)">
            <summary>
            Review Suggested Link
            </summary>
            <param name="linkId"></param>
            <param name="userId"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.AddTOCForSuggestedLinks">
            <summary>
            Temporary api
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.SynchronizeSuggestedLink(System.Guid,System.Boolean)">
            <summary>
            Synchronize suggested link
            </summary>
            <param name="linkId"></param>
            <param name="displayOnPage"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.GetSuggestedPinterestLinks(RMuseum.Models.GanjoorIntegration.ReviewResult,System.Boolean)">
            <summary>
            get suggested pinterest links
            </summary>
            <param name="status"></param>
            <param name="notSynced"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.SuggestPinterestLink(System.Guid,RMuseum.Models.GanjoorIntegration.ViewModels.PinterestSuggestion)">
            <summary>
            suggest pinterest link
            </summary>
            <param name="userId"></param>
            <param name="suggestion"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.ReviewSuggestedPinterestLink(System.Guid,System.Guid,System.String,RMuseum.Models.GanjoorIntegration.ReviewResult,System.String,System.String)">
            <summary>
            Review Suggested Pinterest Link
            </summary>
            <param name="linkId"></param>
            <param name="userId"></param>
            <param name="altText"></param>
            <param name="result"></param>
            <param name="reviewDesc"></param>
            <param name="imageUrl"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.SynchronizeSuggestedPinterestLink(System.Guid)">
            <summary>
            Synchronize suggested pinterest link
            </summary>
            <param name="linkId"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._context">
            <summary>
            Database Contetxt
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._pictureFileService">
            <summary>
            Picture File Service
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.ArtifactService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._backgroundTaskQueue">
            <summary>
            Background Task Queue Instance
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._userService">
            <summary>
            User Service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._notificationService">
            <summary>
            Messaging service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.ArtifactService._ganjoorService">
            <summary>
            Ganjoor Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.ArtifactService.#ctor(RMuseum.DbContext.RMuseumDbContext,Microsoft.Extensions.Configuration.IConfiguration,RMuseum.Services.IPictureFileService,RSecurityBackend.Services.IBackgroundTaskQueue,RSecurityBackend.Services.IAppUserService,RSecurityBackend.Services.IRNotificationService,RMuseum.Services.IGanjoorService)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="configuration"></param>
            <param name="pictureFileService"></param>
            <param name="backgroundTaskQueue"></param>
            <param name="userService"></param>
            <param name="notificationService"></param>
            <param name="ganjoorService"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.BLTileMixer">
            <summary>
            British Library Tile Downloader And Mixer
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.BLTileMixer.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.BLTileMixer._GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            find image encodder
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.CorrectionReviewResultConvertor">
            <summary>
            تبدیلگر CorrectionReviewResult
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.CorrectionReviewResultConvertor.GetString(RMuseum.Models.Ganjoor.CorrectionReviewResult)">
            <summary>
            تبدیل به رشته
            </summary>
            <param name="reviewResult"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.DonationService">
            <summary>
            donation service
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.AddDonation(System.Guid,RMuseum.Models.Accounting.ViewModels.GanjoorDonationViewModel)">
            <summary>
            new donation
            </summary>
            <param name="editingUserId"></param>
            <param name="donation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.UpdateDonation(System.Guid,System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update donation
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <param name="updateModel"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.DeleteDonation(System.Guid,System.Int32)">
            <summary>
            delete donation
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.AddExpense(System.Guid,RMuseum.Models.Accounting.GanjoorExpense)">
            <summary>
            new expense
            </summary>
            <param name="editingUserId"></param>
            <param name="expense"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.UpdateExpense(System.Guid,System.Int32,RMuseum.Models.Accounting.ViewModels.UpdateDateDescriptionViewModel)">
            <summary>
            update expense
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <param name="updateModel"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.DeleteExpense(System.Guid,System.Int32)">
            <summary>
            delete expense
            </summary>
            <param name="editingUserId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.GetDonations">
            <summary>
            returns all donations
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.GetDonation(System.Int32)">
            <summary>
            get donation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.GetExpenses">
            <summary>
            returns all expenses
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.GetExpense(System.Int32)">
            <summary>
            get expense by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.DonationService.DonationPageRow">
            <summary>
            donation page row
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.DonationPageRow.Date">
            <summary>
            date
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.DonationPageRow.Amount">
            <summary>
            amount
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.DonationPageRow.Donor">
            <summary>
            donor
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.DonationPageRow.Usage">
            <summary>
            usage
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.DonationPageRow.Remaining">
            <summary>
            remaining
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.InitializeRecords">
            <summary>
            parse html of https://ganjoor.net/donate/ and fill the records
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.RegenerateDonationsPage(System.Guid,System.String)">
            <summary>
            regenerate donations page
            </summary>
            <param name="editingUserId"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.Implementation.DonationService.ShowAccountInfo">
            <summary>
            Show Donating Information (temporary switch off/on)
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.DonationService._context">
            <summary>
            Database Context
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.DonationService._backgroundTaskQueue">
            <summary>
            Background Task Queue Instance
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.DonationService._ganjoorService">
            <summary>
            Ganjoor Service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.DonationService._configuration">
            <summary>
            configuration
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.DonationService.#ctor(RMuseum.DbContext.RMuseumDbContext,RSecurityBackend.Services.IBackgroundTaskQueue,RMuseum.Services.IGanjoorService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="backgroundTaskQueue"></param>
            <param name="ganjoorService"></param>
            <param name="configuration"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.GanjoorAppUserService">
            <summary>
            Ganjoor User Service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorAppUserService._memoryCache">
            <summary>
            IMemoryCache
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.GanjoorAppUserService._ganjoorService">
            <summary>
            Ganjoor Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorAppUserService.GetEmailSubject(RSecurityBackend.Models.Auth.Db.RVerifyQueueType,System.String)">
            <summary>
            Sign Up Email Subject
            </summary>
            <returns>
            subject
            </returns>
            <param name="op"></param>
            <param name="secretCode"></param>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorAppUserService.GetEmailHtmlContent(RSecurityBackend.Models.Auth.Db.RVerifyQueueType,System.String,System.String)">
            <summary>
            Sign Up Email Html Content
            </summary>
            <param name="op"></param>
            <param name="secretCode"></param>
            <param name="signupCallbackUrl"></param>
            <returns>html content</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorAppUserService.FinalizeSignUp(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            finalize signup and assign his or him comments to him or her
            </summary>
            <param name="email"></param>
            <param name="secret"></param>
            <param name="password"></param>
            <param name="firstName"></param>
            <param name="sureName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorAppUserService.ModifyUser(System.Guid,RSecurityBackend.Models.Auth.ViewModels.RegisterRAppUser)">
            <summary>
            modify existing user /*update related entities cache*/
            </summary>
            <param name="userId"></param>
            <param name="updateUserInfo"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorAppUserService.RemoveUserData(System.Guid)">
            <summary>
            remove user data
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.GanjoorService">
            <summary>
            IGanjoorService implementation
            </summary>
            <summary>
            IGanjoorService implementation
            </summary>
            <summary>
            IGanjoorService implementation
            </summary>
            <summary>
            IGanjoorService implementation
            </summary>
            <summary>
            IGanjoorService implementation
            </summary>
            <summary>
            IGanjoorService implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartUpdatingMundexPage(System.Guid)">
            <summary>
            start updating stats page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ImportFromMySql">
            <summary>
            import GanjoorPage entity data from MySql
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartBuildingSitemap">
            <summary>
            build sitemap
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartBatchGenerateGDBFiles">
            <summary>
            start generating gdb files
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ExportToSqlite(System.Int32)">
            <summary>
            export to sqlite
            </summary>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ApplyCorrectionsFromSqlite(System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String)">
            <summary>
            Apply corrections from sqlite
            </summary>
            <param name="poetId"></param>
            <param name="file"></param>
            <param name="note"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ImportFromSqlite(System.Int32,Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            import from sqlite
            </summary>
            <param name="poetId"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.PrepareHtmlText(System.Collections.Generic.List{RMuseum.Models.Ganjoor.GanjoorVerse})">
            <summary>
            make html text
            </summary>
            <param name="verses"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartUpdatingStatsPage(System.Guid)">
            <summary>
            start updating stats page
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoets(System.Boolean,System.Boolean)">
            <summary>
            Get List of poets
            </summary>
            <param name="published"></param>
            <param name="includeBio"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoetById(System.Int32)">
            <summary>
            get poet by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoetByUrl(System.String)">
            <summary>
            get poet by url
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoetImageIdByUrl(System.String)">
            <summary>
            poet image id by url
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetCatByUrl(System.String,System.Boolean)">
            <summary>
            get cat by url
            </summary>
            <param name="url"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetCatById(System.Int32,System.Boolean)">
            <summary>
            get cat by id
            </summary>
            <param name="id"></param>
            <param name="poems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPageUrlById(System.Int32)">
            <summary>
            get page url by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.CacheCleanForPageById(System.Int32)">
            <summary>
            clean cache for paeg by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.CacheCleanForPageByUrl(System.String)">
            <summary>
            clean cache for page by url
            </summary>
            <param name="url"></param>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.CacheCleanForComment(System.Int32)">
            <summary>
            clean cache for page by comment
            </summary>
            <param name="commentId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPageByUrl(System.String,System.Boolean)">
            <summary>
            get page by url
            </summary>
            <param name="url"></param>
            <param name="catPoems"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemRecitations(System.Int32)">
            <summary>
            get poem recitations  (PlainText/HtmlText are intentionally empty)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemComments(System.Int32,System.Guid,System.Nullable{System.Int32})">
            <summary>
            get poem comments
            </summary>
            <param name="poemId"></param>
            <param name="userId"></param>
            <param name="coupletIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.NewComment(System.Guid,System.String,System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            new comment
            </summary>
            <param name="userId"></param>
            <param name="ip"></param>
            <param name="poemId"></param>
            <param name="content"></param>
            <param name="inReplyTo"></param>
            <param name="coupletIndex"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.EditMyComment(System.Guid,System.Int32,System.String)">
            <summary>
            update user's own comment
            </summary>
            <param name="userId"></param>
            <param name="commentId"></param>
            <param name="htmlComment"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DeleteModerateComment(System.Int32)">
            <summary>
            delete a reported  comment
            </summary>
            <param name="repordId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DeleteMyComment(System.Guid,System.Int32)">
            <summary>
            delete user own comment
            </summary>
            <param name="userId"></param>
            <param name="commentId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetRecentComments(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,System.Boolean)">
            <summary>
            get recent comments
            </summary>
            <param name="paging"></param>
            <param name="filterUserId"></param>
            <param name="onlyPublished"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ReportComment(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPostReportCommentViewModel)">
            <summary>
            report a comment
            </summary>
            <param name="userId"></param>
            <param name="report"></param>
            <returns>id of report record</returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DeleteReport(System.Int32)">
            <summary>
            delete a report
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetReportedComments(RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            Get list of reported comments
            </summary>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemImages(System.Int32)">
            <summary>
            get poem images by id (some fields are intentionally field with blank or null),
            EntityImageId : the most important data field, image url is {WebServiceUrl.Url}/api/images/thumb/{EntityImageId}.jpg or {WebServiceUrl.Url}/api/images/norm/{EntityImageId}.jpg
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemByUrl(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get Poem By Url
            </summary>
            <param name="url"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes"></param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs"></param>
            <param name="comments"></param>
            <param name="verseDetails"></param>
            <param name="navigation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemById(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Get Poem By Id
            </summary>
            <param name="id"></param>
            <param name="catInfo"></param>
            <param name="catPoems"></param>
            <param name="rhymes"></param>
            <param name="recitations"></param>
            <param name="images"></param>
            <param name="songs"></param>
            <param name="comments"></param>
            <param name="verseDetails"></param>
            <param name="navigation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemSongs(System.Int32,System.Boolean,RMuseum.Models.Ganjoor.PoemMusicTrackType)">
            <summary>
            get poem related songs
            </summary>
            <param name="id"></param>
            <param name="approved"></param>
            <param name="trackType"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DeletePoemCorrections(System.Guid,System.Int32)">
            <summary>
            delete unreviewed user corrections for a poem
            </summary>
            <param name="userId"></param>
            <param name="poemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.SuggestPoemCorrection(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            send poem correction
            </summary>
            <param name="correction"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetLastUnreviewedUserCorrectionForPoem(System.Guid,System.Int32)">
            <summary>
            last unreviewed user correction for a poem
            </summary>
            <param name="userId"></param>
            <param name="poemId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetUserCorrections(System.Guid,RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            get user corrections
            </summary>
            <param name="userId"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetPoemEffectiveCorrections(System.Int32,RSecurityBackend.Models.Generic.PagingParameterModel)">
            <summary>
            effective corrections for poem
            </summary>
            <param name="poemId"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetCorrectionById(System.Int32)">
            <summary>
            get correction by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetNextUnreviewedCorrection(System.Int32)">
            <summary>
            get next unreviewed correction
            </summary>
            <param name="skip"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetUnreviewedCorrectionCount">
            <summary>
            unreview correction count
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ModeratePoemCorrection(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemCorrectionViewModel)">
            <summary>
            moderate poem correction
            </summary>
            <param name="userId"></param>
            <param name="moderation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.SuggestSong(System.Guid,RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            suggest song
            </summary>
            <param name="userId"></param>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetUnreviewedSongsCount(System.Guid)">
            <summary>
            get unreviewed count
            </summary>
            <param name="suggestedById"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetNextUnreviewedSong(System.Int32,System.Guid)">
            <summary>
            next unreviewed track
            </summary>
            <param name="skip"></param>
            <param name="suggestedById"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetUserSongsSuggestionsStatistics(System.Guid)">
            <summary>
            get track of user song suggestions
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ReviewSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            review song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DirectInsertSong(RMuseum.Models.Ganjoor.ViewModels.PoemMusicTrackViewModel)">
            <summary>
            direct insert song
            </summary>
            <param name="song"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService._GetRandomPoemId(System.Int32,System.Int32)">
            <summary>
            random poem id from hafez sonnets and old c.ganjoor.net service
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.Faal(System.Int32,System.Boolean)">
            <summary>
            get a random poem from hafez
            </summary>
            <param name="poetId"></param>
            <param name="recitation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetSimilarPoems(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.String,System.Nullable{System.Int32})">
            <summary>
            Get Similar Poems accroding to prosody and rhyme informations
            </summary>
            <param name="paging"></param>
            <param name="metre"></param>
            <param name="rhyme"></param>
            <param name="poetId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.Search(RSecurityBackend.Models.Generic.PagingParameterModel,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
             <summary>
             Search
             You need to run this scripts manually on the database before using this method:
             
             CREATE FULLTEXT CATALOG [GanjoorPoemPlainTextCatalog] WITH ACCENT_SENSITIVITY = OFF
             ALTER TABLE [dbo].[GanjoorPoems] ADD  CONSTRAINT [PK_GanjoorPoems] PRIMARY KEY CLUSTERED 
            (
                [Id] ASC
            ) WITH(PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON[PRIMARY]
             </summary>
             <param name="paging"></param>
             <param name="term"></param>
             <param name="poetId"></param>
             <param name="catId"></param>
             <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.UpdatePageAsync(System.Int32,System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorModifyPageViewModel)">
            <summary>
            modify page
            </summary>
            <param name="id"></param>
            <param name="editingUserId"></param>
            <param name="pageData"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetOlderVersionsOfPage(System.Int32)">
            <summary>
            return page modifications history
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetOldVersionOfPage(System.Int32)">
            <summary>
            get old version
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GetGanjoorMetres">
            <summary>
            returns metre list (ordered by Rhythm)
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.UpdatePoetAsync(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel,System.Guid)">
            <summary>
            modify poet
            </summary>
            <param name="poet"></param>
            <param name="editingUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.AddPoetAsync(RMuseum.Models.Ganjoor.ViewModels.GanjoorPoetViewModel,System.Guid)">
            <summary>
            create new poet
            </summary>
            <param name="poet"></param>
            <param name="editingUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartDeletePoet(System.Int32)">
            <summary>
            delete poet
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.DeletePageAsync(System.Int32)">
            <summary>
            delete page
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.ChangePoetImageAsync(System.Int32,System.Guid)">
            <summary>
            chaneg poet image
            </summary>
            <param name="poetId"></param>
            <param name="imageId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.BatchRenameCatPoemTitles(System.Int32,RMuseum.Models.Ganjoor.ViewModels.GanjoorBatchNamingModel,System.Guid)">
            <summary>
            batch rename
            </summary>
            <param name="catId"></param>
            <param name="model"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.FindPoemRhyme(System.Int32)">
            <summary>
            find poem rhyme
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.FindCategoryPoemsRhymes(System.Int32,System.Boolean)">
            <summary>
            find category poem rhymes
            </summary>
            <param name="catId"></param>
            <param name="retag"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.FindPoemRhythm(System.Int32)">
            <summary>
            find poem rhythm
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.FindCategoryPoemsRhythms(System.Int32,System.Boolean,System.String)">
            <summary>
            find category poem rhymes
            </summary>
            <param name="catId"></param>
            <param name="retag"></param>
            <param name="rhythm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.StartGeneratingSubCatsTOC(System.Guid,System.Int32)">
            <summary>
            start generating sub cats TOC
            </summary>
            <param name="userId"></param>
            <param name="catId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.GenerateTableOfContents(System.Int32,RMuseum.Models.Ganjoor.GanjoorTOC)">
            <summary>
            generate category TOC
            </summary>
            <param name="catId"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.PreparePlainText(System.Collections.Generic.List{RMuseum.Models.Ganjoor.GanjoorVerse})">
            <summary>
            make plain text
            </summary>
            <param name="verses"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.RegerneratePoemsPlainText">
            <summary>
            separate verses in poem.PlainText with  Environment.NewLine instead of SPACE
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.HealthCheckContents">
            <summary>
            examine site pages for broken links
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.BreakPoemAsync(System.Int32,System.Int32,System.Guid)">
            <summary>
            break a poem from a verse forward
            </summary>
            <param name="poemId"></param>
            <param name="vOrder"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._context">
            <summary>
            Database Context
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.GanjoorService._configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._backgroundTaskQueue">
            <summary>
            Background Task Queue Instance
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._appUserService">
            <summary>
            IAppUserService instance
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._notificationService">
            <summary>
            Messaging service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._imageFileService">
            <summary>
            Image File Service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._memoryCache">
            <summary>
            IMemoryCache
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorService._httpClient">
            <summary>
            http client
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorService.#ctor(RMuseum.DbContext.RMuseumDbContext,Microsoft.Extensions.Configuration.IConfiguration,RSecurityBackend.Services.IBackgroundTaskQueue,RSecurityBackend.Services.IAppUserService,RSecurityBackend.Services.IRNotificationService,RSecurityBackend.Services.IImageFileService,Microsoft.Extensions.Caching.Memory.IMemoryCache,System.Net.Http.HttpClient)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="configuration"></param>
            <param name="backgroundTaskQueue"></param>
            <param name="appUserService"></param>
            <param name="notificationService"></param>
            <param name="imageFileService"></param>
            <param name="memoryCache"></param>
            <param name="httpClient"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.GanjoorTranslationService">
            <summary>
            translation service implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.AddLanguageAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            add language
            </summary>
            <param name="lang"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.UpdateLangaugeAsync(RMuseum.Models.Ganjoor.GanjoorLanguage)">
            <summary>
            update an existing language
            </summary>
            <param name="updated"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.DeleteLangaugeAsync(System.Int32)">
            <summary>
            delete language
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.GetLanguageAsync(System.Int32)">
            <summary>
            get langauge by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.GetLanguagesAsync">
            <summary>
            get all languages
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.AddPoemTranslation(System.Guid,RMuseum.Models.Ganjoor.ViewModels.GanjoorPoemTranslationViewModel)">
            <summary>
            add or update poem translation
            </summary>
            <param name="userId"></param>
            <param name="translation"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.GetLastUserContributedLanguage(System.Guid)">
            <summary>
            get last language the user contributed to its translation
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.GetPoemTranslationsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            get translation
            </summary>
            <param name="langId"></param>
            <param name="poemId"></param>
            <param name="onlyPublished"></param>
            <param name="includeUserInfo"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.GanjoorTranslationService._context">
            <summary>
            Database Context
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.GanjoorTranslationService.#ctor(RMuseum.DbContext.RMuseumDbContext)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.ImportedFromDesktopGanjoor.GPersianTextSync">
            <summary>
            Persian specific text utility class
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.ImportedFromDesktopGanjoor.GPersianTextSync.Farglisize(System.String)">
            <summary>
            convert persian text to simple pinglish
            </summary>
            <param name="inputStr"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.ImportedFromDesktopGanjoor.GPersianTextSync._PinglishDic">
            <summary>
            equaivalnet for persian characters
            </summary>
        </member>
        <member name="T:RMuseum.Services.Implementation.LanguageUtils">
            <summary>
            Language Utilitis
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.LanguageUtils.PersianAlphabet">
            <summary>
            Persian Alphabet
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.LanguageUtils.EnglishLowerCaseAlphabet">
            <summary>
            English Alphabet
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.LanguageUtils.GetFirstNotMatchingCharacter(System.String,System.String,System.String)">
            <summary>
            Check to see if input Contains Only Specific Characters
            </summary>
            <param name="input"></param>
            <param name="specfics"></param>
            <param name="additional"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.LanguageUtils.MakeTextSearchable(System.String)">
            <summary>
            make text searchable
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.LanguageUtils.FindRhyme(System.Collections.Generic.List{RMuseum.Models.Ganjoor.GanjoorVerse},System.Boolean)">
            <summary>
            find rhyme
            </summary>
            <param name="verses"></param>
            <param name="secondPhase"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.LanguageUtils.FormatMoney(System.Decimal)">
            <summary>
            format money
            </summary>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.LanguageUtils.FormatDate(System.DateTime)">
            <summary>
            format datetime
            </summary>
            <param name="dateTime"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.MusicCatalogueService">
            <summary>
            Music Catalgue Service Implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.MusicCatalogueService.GetGolhaCollectionPrograms(System.Int32)">
            <summary>
            get golha collection programs
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.MusicCatalogueService.GetGolhaProgramTracks(System.Int32)">
            <summary>
            get golha program tracks
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.MusicCatalogueService.ImportFromMySql(System.String,RSecurityBackend.Services.Implementation.LongRunningJobProgressServiceEF,RSecurityBackend.Models.Generic.Db.RLongRunningJobStatus)">
            <summary>
            import catalogue from ganjoor.net MySql db
            </summary>
            <param name="jobName"></param>
            <param name="jobProgressServiceEF"></param>
            <param name="job"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.Implementation.MusicCatalogueService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.MusicCatalogueService._context">
            <summary>
            Database Contetxt
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.MusicCatalogueService.#ctor(Microsoft.Extensions.Configuration.IConfiguration,RMuseum.DbContext.RMuseumDbContext)">
            <summary>
            constructor
            </summary>
            <param name="configuration"></param>
            <param name="context"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.PictureFileService">
            <summary>
            manipulating picture files 
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.RecoverFromeFiles(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            recover from files
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="order"></param>
            <param name="srcurl"></param>
            <param name="orignalFilePath"></param>
            <param name="normalFilePath"></param>
            <param name="thumbFilePath"></param>
            <param name="originalFileNameForStreams"></param>
            <param name="imageFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.Add(System.String,System.String,System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String,System.IO.Stream,System.String,System.String)">
            <summary>
            add new picture
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="order"></param>
            <param name="file"></param>
            <param name="srcurl"></param>
            <param name="stream"></param>
            <param name="originalFileNameForStreams"></param>
            <param name="imageFolderName">pass empty if you want a generic date based folder</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.GetImage(System.Guid)">
            <summary>
            returns image info
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.RotateImage(System.Guid,System.Int32)">
            <summary>
            Rotate Image in 90 deg. multiplicants: 90, 180 or 270
            </summary>
            <param name="id"></param>
            <param name="degIn90mul"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            find image encodder
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.GetImagePath(RMuseum.Models.Artifact.RPictureFile,System.String)">
            <summary>
            returns image file stream
            </summary>
            <param name="image"></param>
            <param name="sz"></param>
            <returns></returns>        
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.ResizedImageContentType">
            <summary>
            فرمت تصاویر بندانگشتی و ...
            </summary>
            <example>image/jpeg</example>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.NormalImageMaxWidth">
            <summary>
            عرض تصویر با اندازه نرمال - جهت نمایش در صفحات
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.NormalImageMaxHeight">
            <summary>
            /// طول تصویر با اندازه نرمال - جهت نمایش در صفحات
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.ThumbnailImageWidth">
            <summary>
            عرض تصویر بندانگشتی
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.ThumbnailImageMaxHeight">
            <summary>
            طول تصویر بندانگشتی
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.ImageStoragePath">
            <summary>
            Image Storage Path
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.GenerateCroppedImageBasedOnThumbnailCoordinates(System.Guid,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Generated Cropped Image Based On ThumbnailCoordinates For Notes
            </summary>
            <param name="id"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.PictureFileService._context">
            <summary>
            Database Contetxt
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementation.PictureFileService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.PictureFileService._simpleImageStorage">
            <summary>
            Simple Image Storage (not storing multiple image sizes) for creating small cropped images
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.PictureFileService._memoryCache">
            <summary>
            memory cache
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.PictureFileService.#ctor(RMuseum.DbContext.RMuseumDbContext,Microsoft.Extensions.Configuration.IConfiguration,RSecurityBackend.Services.IImageFileService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="configuration"></param>
            <param name="simpleImageStorage"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="T:RMuseum.Services.Implementation.RecitationsRssBuilder">
            <summary>
            creates an RSS feed from recitations
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.RecitationsRssBuilder.Build(RMuseum.Models.GanjoorAudio.ViewModels.PublicRecitationViewModel[])">
            <summary>
            build rss
            </summary>
            <param name="recitations"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.Implementation.RoleService">
            <summary>
            Role Service Implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.RoleService.GetSecurableItems">
            <summary>
            gets list of SecurableItem, should be reimplemented in end user applications
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.RoleService.#ctor(Microsoft.AspNetCore.Identity.RoleManager{RSecurityBackend.Models.Auth.Db.RAppRole})">
            <summary>
            constructor
            </summary>
            <param name="roleManager"></param>       
        </member>
        <member name="T:RMuseum.Services.Implementation.SiteBannersService">
            <summary>
            ganjoor.net banners service
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.AddSiteBanner(System.IO.Stream,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add site banner
            </summary>
            <param name="imageStream"></param>
            <param name="fileName"></param>
            <param name="alternateText"></param>
            <param name="targetUrl"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.ModifySiteBanner(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            modify site banner
            </summary>
            <param name="id"></param>
            <param name="alternateText"></param>
            <param name="targetUrl"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.DeleteSiteBanner(System.Int32)">
            <summary>
            delete site banner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.GetSiteBanners">
            <summary>
            get site banners
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.GetARandomActiveSiteBanner">
            <summary>
            get a random site banner
            </summary>
            <returns></returns>
        </member>
        <member name="F:RMuseum.Services.Implementation.SiteBannersService._context">
            <summary>
            Database Context
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.SiteBannersService._imageFileService">
            <summary>
            Image File Service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementation.SiteBannersService._memoryCache">
            <summary>
            IMemoryCache
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementation.SiteBannersService.#ctor(RMuseum.DbContext.RMuseumDbContext,RSecurityBackend.Services.IImageFileService,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="imageFileService"></param>
            <param name="memoryCache"></param>
        </member>
        <member name="T:RMuseum.Services.Implementationa.RecitationService">
            <summary>
            Audio Narration Service Implementation
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.SecureGetAll(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,RMuseum.Models.GanjoorAudio.AudioReviewStatus,System.String)">
            <summary>
            returns list of narrations
            </summary>
            <param name="paging"></param>
            <param name="filteredUserId">send Guid.Empty if you want all narrations</param>
            <param name="status"></param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetPublishedRecitations(RSecurityBackend.Models.Generic.PagingParameterModel,System.String)">
            <summary>
            returns list of publish recitations
            </summary>
            <param name="paging"></param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetPublishedRecitationById(System.Int32)">
            <summary>
            get published recitation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.Get(System.Int32)">
            <summary>
            return selected narration information
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.Delete(System.Int32,System.Guid)">
            <summary>
            Delete recitation
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetPoemNarrationVerseSyncArray(System.Int32)">
            <summary>
            Gets Verse Sync Range Information
            </summary>
            <param name="id">narration id</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetPoemNarrationValidationError(RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel)">
            <summary>
            validate PoemNarrationViewModel
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.UpdatePoemNarration(System.Int32,RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel)">
            <summary>
            updates metadata for narration
            </summary>
            <param name="id"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.OneTimeImport(System.Guid)">
            <summary>
            imports data from ganjoor MySql database
            </summary>
            <param name="ownerRAppUserId">User Id which becomes owner of imported data</param>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.BuildProfilesFromExistingData(System.Guid)">
            <summary>
            build profiles from exisng narrations data
            </summary>
            <param name="ownerRAppUserId">User Id which becomes owner of imported data</param>
            <returns>error string if occurs</returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.InitiateNewUploadSession(System.Guid,System.Boolean)">
            <summary>
            Initiate New Upload Session for audio
            </summary>
            <param name="userId"></param>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.SaveUploadedFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Save uploaded file
            </summary>
            <param name="uploadedFile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.FinalizeNewUploadSession(RMuseum.Models.UploadSession.UploadSession,RMuseum.Models.UploadSession.UploadSessionFile[])">
            <summary>
            finalize upload session (add files)
            </summary>
            <param name="session"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.ModeratePoemNarration(System.Int32,System.Guid,RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel)">
            <summary>
            Moderate pending narration
            </summary>
            <param name="id"></param>
            <param name="moderatorId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetUploadSession(System.Guid)">
            <summary>
            Get Upload Session (including files)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetUserNarrationProfiles(System.Guid,System.String)">
            <summary>
            Get User Profiles
            </summary>
            <param name="userId"></param>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetUserDefProfile(System.Guid)">
            <summary>
            Get User Default Profile
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetUserProfileValidationError(RMuseum.Models.GanjoorAudio.UserRecitationProfile)">
            <summary>
            validating narration profile
            </summary>
            <param name="p"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.AddUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Add a narration profile
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.UpdateUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Update a narration profile 
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.DeleteUserNarrationProfiles(System.Guid,System.Guid)">
            <summary>
            Delete a narration profile 
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetUploads(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid)">
            <summary>
            Get uploads descending by upload time
            </summary>
            <param name="paging"></param>
            <param name="userId">if userId is empty all user uploads would be returned</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetPublishingQueueStatus(RSecurityBackend.Models.Generic.PagingParameterModel,System.Boolean,System.Guid)">
            <summary>
            publishing tracker data
            </summary>
            <param name="paging"></param>
            <param name="unfinished"></param>
            <param name="filteredUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.TransferRecitationsOwnership(System.Guid,System.Guid,System.String)">
            <summary>
            Transfer Recitations Ownership
            </summary>
            <param name="currentOwenerId"></param>
            <param name="newOwnerId"></param>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.MakeArtistRecitationsFirst(System.String)">
            <summary>
            move recitaions of an artist to the first position
            </summary>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.GetSynchronizationQueue(System.Guid)">
            <summary>
            Synchronization Queue
            </summary>
            <param name="filteredUserId"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.Implementationa.RecitationService.UploadEnabled">
            <summary>
            Upload Enabled (temporary switch off/on for upload)
            </summary>
        </member>
        <member name="P:RMuseum.Services.Implementationa.RecitationService.Configuration">
            <summary>
            Configuration
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._context">
            <summary>
            Database Contetxt
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._backgroundTaskQueue">
            <summary>
            Background Task Queue Instance
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._notificationService">
            <summary>
            Messaging service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._userService">
            <summary>
            Users service
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._memoryCache">
            <summary>
            memory cache
            </summary>
        </member>
        <member name="F:RMuseum.Services.Implementationa.RecitationService._ganjoorService">
            <summary>
            ganjoor service
            </summary>
        </member>
        <member name="M:RMuseum.Services.Implementationa.RecitationService.#ctor(RMuseum.DbContext.RMuseumDbContext,Microsoft.Extensions.Configuration.IConfiguration,RSecurityBackend.Services.IBackgroundTaskQueue,RSecurityBackend.Services.IRNotificationService,RSecurityBackend.Services.IAppUserService,Microsoft.Extensions.Caching.Memory.IMemoryCache,RMuseum.Services.IGanjoorService)">
            <summary>
            constructor
            </summary>
            <param name="context"></param>
            <param name="configuration"></param>
            <param name="backgroundTaskQueue"></param>
            <param name="notificationService"></param>
            <param name="userService"></param>
            <param name="memoryCache"></param>
            <param name="ganjoorService"></param>
        </member>
        <member name="T:RMuseum.Services.IMusicCatalogueService">
            <summary>
            Music Catalogue Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.IMusicCatalogueService.GetGolhaCollectionPrograms(System.Int32)">
            <summary>
            get golha collection programs
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IMusicCatalogueService.GetGolhaProgramTracks(System.Int32)">
            <summary>
            get golha program tracks
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Services.IPictureFileService">
            <summary>
            manipulating picture files 
            </summary>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.Add(System.String,System.String,System.Int32,Microsoft.AspNetCore.Http.IFormFile,System.String,System.IO.Stream,System.String,System.String)">
            <summary>
            add new picture
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="order"></param>
            <param name="file"></param>
            <param name="srcurl"></param>
            <param name="stream"></param>
            <param name="originalFileNameForStreams"></param>
            <param name="imageFolderName">pass empty if you want a generic date based folder</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.RecoverFromeFiles(System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            recover from files
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="order"></param>
            <param name="srcurl"></param>
            <param name="orignalFilePath"></param>
            <param name="normalFilePath"></param>
            <param name="thumbFilePath"></param>
            <param name="originalFileNameForStreams"></param>
            <param name="imageFolderName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.GetImage(System.Guid)">
            <summary>
            returns image info
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.GetImagePath(RMuseum.Models.Artifact.RPictureFile,System.String)">
            <summary>
            returns image file stream
            </summary>
            <param name="image"></param>
            <param name="sz"></param>
            <returns></returns>        
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.RotateImage(System.Guid,System.Int32)">
            <summary>
            Rotate Image in 90 deg. multiplicants: 90, 180 or 270
            </summary>
            <param name="id"></param>
            <param name="degIn90mul"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.GetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Get Encoder
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IPictureFileService.GenerateCroppedImageBasedOnThumbnailCoordinates(System.Guid,System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Generate Cropped Image Based On ThumbnailCoordinates For Notes
            </summary>
            <param name="id"></param>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.IPictureFileService.ImageStoragePath">
            <summary>
            Image Storage Path
            </summary>
        </member>
        <member name="T:RMuseum.Services.IRecitationService">
            <summary>
            Audio Narration Service
            </summary>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.SecureGetAll(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid,RMuseum.Models.GanjoorAudio.AudioReviewStatus,System.String)">
            <summary>
            returns list of narrations
            </summary>
            <param name="paging"></param>
            <param name="filteredUserId">send Guid.Empty if you want all narrations</param>
            <param name="status"></param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetPublishedRecitations(RSecurityBackend.Models.Generic.PagingParameterModel,System.String)">
            <summary>
            returns list of publish narrations
            </summary>
            <param name="paging"></param>
            <param name="searchTerm"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetPublishedRecitationById(System.Int32)">
            <summary>
            get published recitation by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.Get(System.Int32)">
            <summary>
            return selected narration information
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.Delete(System.Int32,System.Guid)">
            <summary>
            Delete recitation (recitation should belong to userId)
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetPoemNarrationVerseSyncArray(System.Int32)">
            <summary>
            Gets Verse Sync Range Information
            </summary>
            <param name="id">narration id</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.UpdatePoemNarration(System.Int32,RMuseum.Models.GanjoorAudio.ViewModels.RecitationViewModel)">
            <summary>
            updates metadata for narration
            </summary>
            <param name="id"></param>
            <param name="metadata"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.OneTimeImport(System.Guid)">
            <summary>
            imports narration data from ganjoor MySql database
            </summary>
            <param name="ownerRAppUserId">User Id which becomes owner of imported data</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.BuildProfilesFromExistingData(System.Guid)">
            <summary>
            build profiles from exisng narrations data
            </summary>
            <param name="ownerRAppUserId">User Id which becomes owner of imported data</param>
            <returns>error string if occurs</returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.InitiateNewUploadSession(System.Guid,System.Boolean)">
            <summary>
            Initiate New Upload Session for audio
            </summary>
            <param name="userId"></param>
            <param name="replace"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.SaveUploadedFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Save uploaded file
            </summary>
            <param name="uploadedFile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.FinalizeNewUploadSession(RMuseum.Models.UploadSession.UploadSession,RMuseum.Models.UploadSession.UploadSessionFile[])">
            <summary>
            finalize upload session (add files)
            </summary>
            <param name="session"></param>
            <param name="files"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.ModeratePoemNarration(System.Int32,System.Guid,RMuseum.Models.GanjoorAudio.ViewModels.RecitationModerateViewModel)">
            <summary>
            Moderate pending narration
            </summary>
            <param name="id"></param>
            <param name="moderatorId"></param>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetUploadSession(System.Guid)">
            <summary>
            Get Upload Session (including files)
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetUserNarrationProfiles(System.Guid,System.String)">
            <summary>
            Get User Profiles
            </summary>
            <param name="userId"></param>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetUserDefProfile(System.Guid)">
            <summary>
            Get User Default Profile
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.AddUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Add a narration profile
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.UpdateUserNarrationProfiles(RMuseum.Models.GanjoorAudio.ViewModels.UserRecitationProfileViewModel)">
            <summary>
            Update a narration profile 
            </summary>
            <param name="profile"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.DeleteUserNarrationProfiles(System.Guid,System.Guid)">
            <summary>
            Delete a narration profile 
            </summary>
            <param name="id"></param>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.TransferRecitationsOwnership(System.Guid,System.Guid,System.String)">
            <summary>
            Transfer Recitations Ownership
            </summary>
            <param name="currentOwenerId"></param>
            <param name="newOwnerId"></param>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetUploads(RSecurityBackend.Models.Generic.PagingParameterModel,System.Guid)">
            <summary>
            Get uploads descending by upload time
            </summary>
            <param name="paging"></param>
            <param name="userId">if userId is empty all user uploads would be returned</param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetPublishingQueueStatus(RSecurityBackend.Models.Generic.PagingParameterModel,System.Boolean,System.Guid)">
            <summary>
            publishing tracker data
            </summary>
            <param name="paging"></param>
            <param name="unfinished"></param>
            <param name="filteredUserId"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.MakeArtistRecitationsFirst(System.String)">
            <summary>
            move recitaions of an artist to the first position
            </summary>
            <param name="artistName"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.IRecitationService.GetSynchronizationQueue(System.Guid)">
            <summary>
            Synchronization Queue
            </summary>
            <param name="filteredUserId"></param>
            <returns></returns>
        </member>
        <member name="P:RMuseum.Services.IRecitationService.UploadEnabled">
            <summary>
            Upload Enabled (temporary switch off/on for upload)
            </summary>
        </member>
        <member name="M:RMuseum.Services.ISiteBannersService.AddSiteBanner(System.IO.Stream,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Add site banner
            </summary>
            <param name="imageStream"></param>
            <param name="fileName"></param>
            <param name="alternateText"></param>
            <param name="targetUrl"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.ISiteBannersService.ModifySiteBanner(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            modify site banner
            </summary>
            <param name="id"></param>
            <param name="alternateText"></param>
            <param name="targetUrl"></param>
            <param name="active"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.ISiteBannersService.DeleteSiteBanner(System.Int32)">
            <summary>
            delete site banner
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.ISiteBannersService.GetSiteBanners">
            <summary>
            get site banners
            </summary>
            <returns></returns>
        </member>
        <member name="M:RMuseum.Services.ISiteBannersService.GetARandomActiveSiteBanner">
            <summary>
            get a random site banner
            </summary>
            <returns></returns>
        </member>
        <member name="T:RMuseum.Swashbuckle.SecurityRequirementsOperationFilter">
            <summary>
            //https://mattfrear.com/2018/07/21/add-an-authorization-header-to-your-swagger-ui-with-swashbuckle-revisited/
            </summary>
        </member>
        <member name="M:RMuseum.Swashbuckle.SecurityRequirementsOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="P:RMuseum.WebServiceUrl.Url">
            <summary>
            url
            </summary>
        </member>
        <member name="T:ganjoor.GDBListProcessor">
            <summary>
            جهت ذخیره، دریافت و پردازش مخازن مجموعه های شعرها به کار می رود
            </summary>
        </member>
        <member name="M:ganjoor.GDBListProcessor.Save(System.String,System.String,System.String,System.String,System.Collections.Generic.List{ganjoor.GDBInfo})">
            <summary>
            ذخیرۀ لیستی از GDBInfoها در یک فایل xml
            </summary>
            <param name="FileName"></param>
            <param name="Name"></param>
            <param name="Description"></param>
            <param name="MoreInfoUrl"></param>
            <param name="List"></param>
            <returns></returns>
        </member>
        <member name="T:ganjoor.PoemAudio">
            <summary>
            اطلاعات فایل صوتی شعر
            </summary>
        </member>
        <member name="M:ganjoor.PoemAudio.#ctor">
            <summary>
            سازنده
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.PoemId">
            <summary>
            شناسۀ شعر
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.Id">
            <summary>
            شناسۀ فایل صوتی با شروع از 1 برای هر شعر
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.FilePath">
            <summary>
            مسیر فایل
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.Description">
            <summary>
            شرح
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.IsSynced">
            <summary>
            آیا همگام شده
            </summary>
        </member>
        <member name="T:ganjoor.PoemAudio.SyncInfo">
            <summary>
            ساختار اطلاعات همگام سازی
            </summary>
        </member>
        <member name="F:ganjoor.PoemAudio.SyncInfo.VerseOrder">
            <summary>
            ترتیب مصرع (-1 نشانگر آغاز فایل صوتی و -2 نشانگر پایان آن است)
            </summary>
        </member>
        <member name="F:ganjoor.PoemAudio.SyncInfo.AudioMiliseconds">
            <summary>
            زمان در فایل صوتی بر حسب میلی ثانیه
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.SyncArray">
            <summary>
            اطلاعات همگام سازی
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.DownloadUrl">
            <summary>
            نشانی دریافت فایل صوتی
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.IsDirectlyDownloadable">
            <summary>
            آیا لینک دریافت فایل صوتی مستقیم است
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.SyncGuid">
            <summary>
            شناسۀ یکتای اطلاعات همگام سازی
            </summary>
        </member>
        <member name="P:ganjoor.PoemAudio.FileCheckSum">
            <summary>
            امضای یکتای فایل صوتی
            </summary>
        </member>
        <member name="M:ganjoor.PoemAudio.ComputeCheckSum(System.String)">
            <summary>
            محاسبه چک سام فایل
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="P:ganjoor.PoemAudio.IsUploaded">
            <summary>
            آیا اطلاعات همگام سازی آپلود شده؟
            </summary>
        </member>
        <member name="M:ganjoor.PoemAudio.ToString">
            <summary>
            تبدیل به رشته
            </summary>
            <returns>شرح</returns>
        </member>
        <member name="P:ganjoor.PoemAudio.PoetName">
            <remarks>
            Warning: not always filled
            </remarks>
        </member>
        <member name="P:ganjoor.PoemAudio.PoemTitle">
            <remarks>
            Warning: Rarely filled
            </remarks>
        </member>
        <member name="T:ganjoor.PoemAudioListProcessor">
            <summary>
            پردازشگر ذخیره و بارگذاری لیستهای اشعار
            </summary>
        </member>
        <member name="M:ganjoor.PoemAudioListProcessor.Save(System.String,ganjoor.PoemAudio,System.Boolean)">
            <summary>
            ذخیره در فایل
            </summary>
            <param name="FileName"></param>
            <param name="poemAudio"></param>
            <param name="oldVersion"></param>
            <returns></returns>
        </member>
        <member name="M:ganjoor.PoemAudioListProcessor.Save(System.String,System.Collections.Generic.List{ganjoor.PoemAudio},System.Boolean)">
            <summary>
            ذخیره در فایل
            </summary>
            <param name="FileName"></param>
            <param name="List"></param>
            <param name="oldVersion"></param>
            <returns></returns>
        </member>
        <member name="M:ganjoor.PoemAudioListProcessor.Load(System.String)">
            <summary>
            بارگذاری از فایل
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
    </members>
</doc>
