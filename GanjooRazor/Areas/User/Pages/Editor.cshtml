@page
@model GanjooRazor.Areas.User.Pages.EditorModel
@using DNTPersianUtils.Core
@{
    Layout = "_UserPanelLayout";
    ViewData["Title"] = "ویرایشگر";
    await GanjooRazor.Utils.GanjoorSessionChecker.ApplyPermissionsToViewData(Request, Response, ViewData);
}
<h1>@ViewData["Title"]</h1>
<script>
    $(document).ready(function() {
        $('[contenteditable]').keypress(function(e) { return e.which != 13; });
    });
</script>
<script>


    function savePoemCorrections(id, verseCount) {
        var verseOrderText = [];
        var verseOrderMarkedForDelete = [];
        var versePositions = [];
        for (var i = 0; i <= verseCount; i++) {
            var oldElementName = '#original-' + i.toString();
            var newElementName = '#id-' + i.toString();
            var checkVIndex = '#marked-for-delete-' + i.toString();
            var oldVersePosition = '#versepostion-original-' + i.toString();
            var newVersePosition = '#versepostion-' + i.toString();
            versePositions.push($(newVersePosition).val());
            if ($(newElementName).text() != $(oldElementName).text() || $(checkVIndex).is(":checked") || $(newVersePosition).val() != $(oldVersePosition).val()) {
                verseOrderText.push(i.toString() + 'TextSeparator' + $(newElementName).text());
                if ($(checkVIndex).is(":checked")) {
                    verseOrderMarkedForDelete.push(i);
                }
            }
        }


        if (verseOrderText.length == 0) {
            if ($('#rhythm-old').text() == $('#rhythm-new').val() && $('#rhythm-old2').text() == $('#rhythm-new2').val()) {
                alert('شما هیچ تغییری در متن نداده‌اید!');
                return;
            }
        }

        $('#savecorrections').hide();
        $('#saving').text('در حال ذخیره ...');

        var rhythm_new = $('#rhythm-new').val();
        if (rhythm_new == $('#rhythm-old').text()) {
            rhythm_new = null;
        }

        var rhythm_new2 = $('#rhythm-new2').val();
        if (rhythm_new2 == $('#rhythm-old2').text()) {
            rhythm_new2 = null;
        }

        var url = '?handler=SendPoemCorrections';

        $.ajax({
            type: "POST",
            url: url,
            data: {
                poemid: id,
                verseOrderText: verseOrderText,
                verseOrderMarkedForDelete: verseOrderMarkedForDelete,
                versePositions: versePositions,
                rhythm: rhythm_new,
                rhythm2: rhythm_new2,
                note: $('#note').val()

            },
            success: function() {
                location.reload(true);
            },
            error: function(e) {
                if (e.responseText == null)
                    alert(e);
                else
                    alert(e.responseText);
                $('#savecorrections').show();
                $('#saving').text('');
            }

        });

    }

    function deletePoemCorrections(id) {
        if (!confirm('آیا از حذف تغییرات پیشنهادی اطمینان دارید؟'))
            return;

        $('#deletecorrections').hide();
        $('#saving').text('در حال ذخیره ...');

        var url = '?handler=DeletePoemCorrections';

        $.ajax({
            type: "POST",
            url: url,
            data: {
                poemid: id,
            },
            error: function() {
                alert('خطا رخ داد.')
            },
            success: function() {
                location.reload(true);
            },

        });
    }

    function editorcompare(id) {
        var a = document.getElementById('original-' + id.toString());
        var b = document.getElementById('id-' + id.toString());
        var result = document.getElementById('compare-' + id.toString());
        var diff = JsDiff.diffChars(a.textContent, b.textContent);
        var fragment = document.createDocumentFragment();
        for (var i = 0; i < diff.length; i++) {

            if (diff[i].added && diff[i + 1] && diff[i + 1].removed) {
                var swap = diff[i];
                diff[i] = diff[i + 1];
                diff[i + 1] = swap;
            }

            var node;
            if (diff[i].removed) {
                node = document.createElement('del');
                node.style.color = 'red';
                node.appendChild(document.createTextNode(diff[i].value));
            } else if (diff[i].added) {
                node = document.createElement('span');
                node.style.color = 'white';
                node.style.backgroundColor = 'green';
                node.appendChild(document.createTextNode(diff[i].value));
            } else {
                node = document.createTextNode(diff[i].value);
            }
            fragment.appendChild(node);
        }

        result.textContent = '';
        result.appendChild(fragment);
    }

    function breakPoem(poemId, vOrder, vText) {
        if (!confirm(vText))
            return;
        $('#breakpoem-' + String(vOrder)).hide();

        var url = '?handler=BreakPoem';

        $.ajax({
            type: "POST",
            url: url,
            data: {
                poemId: poemId,
                vOrder: vOrder
            },
            success: function(id) {
                if (String(id) == '-1') {
                    alert('کار شکستن شعر شروع شد.');
                    return;
                }
                location.href = '/?p=' + String(id);
            },
            error: function(e) {
                if (e.responseText == null)
                    alert(e);
                else
                    alert(e.responseText);
                $('#breakpoem-' + String(vOrder)).show();
            }

        });
    }

    function updateRelatedSections(meterId, rhymeletters) {
        var url = '?handler=UpdateRelatedSections';

        $.ajax({
            type: "POST",
            url: url,
            data: {
                meterId: meterId,
                rhyme: rhymeletters,
            },
            success: function() {
                alert('انجام شد.');
            },
            error: function(e) {
                if (e.responseText == null)
                    alert(e);
                else
                    alert(e.responseText);
            }

        });
    }
</script>
@if (!string.IsNullOrEmpty(Model.FatalError))
{
    <p>@Model.FatalError</p>
}
else
{

    <p>لطفاً در ویرایش متن به <a href="https://blog.ganjoor.net/1400/05/23/notes-for-suggesting-corrections/" target="_blank">این نکات</a> توجه فرمایید.</p>
    <p><a role="button" target="_blank" href="@Model.PageInformation.FullUrl" class="actionlink">@Model.PageInformation.FullTitle</a></p>



    if (Model.MyLastEdit != null)
    {
        <table>
            <tr>
                <td colspan="2">ویرایشهای بررسی نشدهٔ من</td>
            </tr>

            <tr>
                <td>متن اولیه</td>
                <td>تغییرات من</td>
            </tr>

            @if (Model.MyLastEdit.Title != null)
            {
                <tr>
                    <td>
                        <p class="red-color">@Model.MyLastEdit.OriginalTitle</p>
                    </td>
                    <td>
                        <p class="green-color">@Model.MyLastEdit.Title</p>
                    </td>
                </tr>
            }
            @if (Model.MyLastEdit.Rhythm != null)
            {
                <tr>
                    <td>
                        <p class="red-color">@Model.MyLastEdit.OriginalRhythm</p>
                    </td>
                    <td>
                        <p class="green-color">@Model.MyLastEdit.Rhythm</p>
                    </td>
                </tr>
            }
            @if (Model.MyLastEdit.Rhythm2 != null)
            {
                <tr>
                    <td>
                        <p class="red-color">@Model.MyLastEdit.OriginalRhythm2</p>
                    </td>
                    <td>
                        <p class="green-color">@Model.MyLastEdit.Rhythm2</p>
                    </td>
                </tr>
            }
            @if (Model.MyLastEdit.VerseOrderText != null)
                @foreach (var verse in Model.MyLastEdit.VerseOrderText)
                {
                    @if (verse.MarkForDelete)
                    {
                        <tr>
                            <td>
                                <p>@verse.OriginalText</p>
                            </td>
                            <td>
                                <p class="red-color">باید حذف شود</p>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr>
                            <td>
                                <p class="red-color">@verse.OriginalText</p>
                            </td>
                            <td>
                                <p class="green-color">@verse.Text</p>
                            </td>
                        </tr>
                    }

                }
            @if (!string.IsNullOrEmpty(Model.MyLastEdit.Note))
            {
                <tr>
                    <td>یادداشت:</td>
                    <td>
                        @Model.MyLastEdit.Note
                    </td>
                </tr>
            }

            <tr>
                <td colspan="2" class="td-button-container">
                    <a role="button" id="deletecorrections" class="editor-button background-red" onclick="deletePoemCorrections(@Model.PageInformation.Poem.Id)">انصراف و حذف این ویرایش</a>
                </td>
            </tr>

        </table>
    }

    <table>
        <tr>
            <td><a href="/User/PoemCorrectionsHistory?id=@Model.PageInformation.Id" role="button" class="pagebutton" target="_blank">سوابق ویرایش</a></td>
        </tr>
        @if (Model.PageInformation.Poem.Previous != null)
        {
            <tr>
                <td>
                    @if (Model.ShowAdminOps)
                    {
                        <a href="/User/Editor?admin=1&id=@Model.PageInformation.Poem.Previous.Id" role="button" class="pagebutton">ویرایش شعر قبل</a>
                    }
                    else
                    {
                        <a href="/User/Editor?id=@Model.PageInformation.Poem.Previous.Id" role="button" class="pagebutton">ویرایش شعر قبل</a>
                    }
                </td>
            </tr>
        }
        @if (Model.PageInformation.Poem.Next != null)
        {
            <tr>
                <td>
                    @if (Model.ShowAdminOps)
                    {
                        <a href="/User/Editor?admin=1&id=@Model.PageInformation.Poem.Next.Id" role="button" class="pagebutton">ویرایش شعر بعد</a>
                    }
                    else
                    {
                        <a href="/User/Editor?id=@Model.PageInformation.Poem.Next.Id" role="button" class="pagebutton">ویرایش شعر بعد</a>
                    }
                </td>
            </tr>
        }
        @if (Model.CanAssignRhythms)
        {
            <tr>
                <td class="td-button-container">
                    <a role="button" href="#rhythms-section" class="editor-button background-gray">لغزش به بخش وزن</a>
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td class="td-button-container">
                    <a role="button" href="#poem-sections" class="editor-button background-gray">لغزش به بخش قطعات</a>
                </td>
            </tr>
            
        }
        @if (Model.CanEdit && !Model.ShowAdminOps)
        {
            <tr>
                <td><a role="button" href="/User/Editor?id=@Model.PageInformation.Id&admin=1" class="pagebutton">امکانات مدیریتی</a></td>
            </tr>
        }
        @if (Model.TextSourceImage != null)
        {
            <tr>
                <td>
                    <p><strong>منبع کاغذی:</strong></p>
                    <p>(متن پیشنهادی نمی‌بایست از نسخهٔ متفاوتی باشد)</p>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="related-images">
                        <div class="related-image-container">
                            <a target="_blank" href="@Html.Raw(Model.TextSourceImage.TargetPageUrl)">
                                <img src="@Html.Raw(Model.TextSourceImage.ThumbnailImageUrl)" alt="@Model.TextSourceImage.AltText" loading="lazy" width="200" class="related-image">
                            </a>

                        </div>
                    </div>
                </td>
            </tr>
        }
        <tr>
            <td>
                <p><strong>ویرایش متن:</strong></p>
            </td>
        </tr>

        <tr>
            <td>
                عنوان فعلی:
            </td>
        </tr>
        <tr>
            <td>
                <p id="original-0">@Model.PageInformation.Poem.Title</p>
            </td>
        </tr>
        <tr>
            <td>
                عنوان ویراستهٔ من:
            </td>
        </tr>
        <tr>
            <td>

                @if (Model.MyLastEdit != null && Model.MyLastEdit.Title != null)
                {
                    <div id="id-0" name="id-0" contenteditable="true" class="background-white">@Model.MyLastEdit.Title</div>
                    <script>
                        $(document).ready(function() {
                            editorcompare(0);
                        });
                        document.getElementById("id-0").addEventListener("input", function() {
                            editorcompare(0)
                        }, false);
                    </script>
                }
                else
                {
                    <div type="text" id="id-0" name="id-0" contenteditable="true" class="background-white">@Model.PageInformation.Poem.Title</div>
                    <script>
                        document.getElementById("id-0").addEventListener("input", function() {
                            editorcompare(0)
                        }, false);
                    </script>
                }
            </td>
        </tr>
        <tr>
            <td>
                تغییرات:
            </td>
        </tr>
        <tr>
            <td>
                <p id="compare-0">@Model.PageInformation.Poem.Title</p>
            </td>
        </tr>
        @foreach (var verse in Model.PageInformation.Poem.Verses)
        {
            <tr id="tr-@verse.VOrder">
                <td>
                    بیت @Model.GetVerseCoupletNumber(verse).ToPersianNumbers()
                </td>
            </tr>
            <tr>
                <td>
                    ترتیب مصرع یا خط از ابتدا: @verse.VOrder.ToPersianNumbers()
                </td>
            </tr>

            <tr>
                <td>
                    متن فعلی:
                </td>
            </tr>
            <tr>
                <td>
                    <p id="original-@($"{verse.VOrder}")">@verse.Text</p>
                </td>
            </tr>
            <tr>
                <td>
                    ویراستهٔ من:
                </td>
            </tr>
            <tr>
                <td>
                    @if (Model.MyLastEdit != null && Model.MyLastEdit.VerseOrderText != null && Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).Any())
                    {
                        <div id="id-@($"{verse.VOrder}")" name="name-@($"{verse.VOrder}")" contenteditable="true" class="background-white">@Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).First().Text</div>


                        <script>
                            document.getElementById("id-@($"{verse.VOrder}")").addEventListener("input", function() {
                                editorcompare(@verse.VOrder)
                            }, false);
                            $(document).ready(function() {
                                editorcompare(@verse.VOrder);
                            });
                        </script>
                    }
                    else
                    {
                        <div id="id-@($"{verse.VOrder}")" name="name-@($"{verse.VOrder}")" contenteditable="true" class="background-white">@verse.Text</div>
                        <script>
                            document.getElementById("id-@($"{verse.VOrder}")").addEventListener("input", function() {
                                editorcompare(@verse.VOrder)
                            }, false);
                        </script>
                    }
                </td>
            </tr>
            <tr>
                <td>
                    تغییرات:
                </td>
            </tr>
            <tr>
                <td>
                    <p id="compare-@($"{verse.VOrder}")">@verse.Text</p>
                </td>
            </tr>
            <tr>
                <td>
                    @if (Model.MyLastEdit != null && Model.MyLastEdit.VerseOrderText != null && Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder && v.MarkForDelete).Any())
                    {
                        <input type="checkbox" name="marked-for-delete-@verse.VOrder" id="marked-for-delete-@verse.VOrder" checked />
                        <label for="marked-for-delete-@verse.VOrder">باید حذف شود</label>
                    }
                    else
                    {
                        <input type="checkbox" name="marked-for-delete-@verse.VOrder" id="marked-for-delete-@verse.VOrder" />
                        <label for="marked-for-delete-@verse.VOrder">باید حذف شود</label>
                    }
                </td>
            </tr>

            <tr>
                <td>
                    نوع
                </td>
            </tr>
            <tr>
                <td>

                    <select id="versepostion-@($"{verse.VOrder}")" name="versepostion-@($"{verse.VOrder}")">
                        @if (Model.MyLastEdit != null && Model.MyLastEdit.VerseOrderText != null && Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).Any())
                        {
                            @foreach (var verseposition in RMuseum.Models.Ganjoor.VersePositionHelper.VersePositions)
                                if (verseposition.VersePosition == Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).First().VersePosition)
                                {
                                    <option value="@verseposition.VersePosition" selected>@verseposition.Text</option>
                                }
                                else
                                {
                                    <option value="@verseposition.VersePosition">@verseposition.Text</option>
                                }
                        }
                        else
                        {
                            @foreach (var verseposition in RMuseum.Models.Ganjoor.VersePositionHelper.VersePositions)
                                if (verseposition.VersePosition == verse.VersePosition)
                                {
                                    <option value="@verseposition.VersePosition" selected>@verseposition.Text</option>
                                }
                                else
                                {
                                    <option value="@verseposition.VersePosition">@verseposition.Text</option>
                                }
                        }
                    </select>
                    @if (Model.MyLastEdit != null && Model.MyLastEdit.VerseOrderText != null && Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).Any())
                    {
                        <input type="hidden" id="versepostion-original-@($"{verse.VOrder}")" name="versepostion-original-@($"{verse.VOrder}")" value="@Model.MyLastEdit.VerseOrderText.Where(v => v.VORder == verse.VOrder).First().VersePosition" />
                    }
                    else
                    {
                        <input type="hidden" id="versepostion-original-@($"{verse.VOrder}")" name="versepostion-original-@($"{verse.VOrder}")" value="@verse.VersePosition" />
                    }

                </td>

            </tr>

            <tr>
                <td class="td-button-container">
                    <a role="button" href="#savecorrections" class="editor-button background-gray">لغزش به دکمهٔ ذخیره</a>
                </td>
            </tr>

            @if (Model.ShowAdminOps && verse.VOrder > 1 && verse.VersePosition != RMuseum.Models.Ganjoor.VersePosition.Left)
            {
                <tr>
                    <td class="td-button-container">
                        <a role="button" id="breakpoem-@verse.VOrder" class="editor-button background-red" onclick="breakPoem(@Model.PageInformation.Poem.Id, @verse.VOrder, '@verse.Text')">شکستن از اینجا</a>
                    </td>
                </tr>
            }

        }

        @if (!Model.CanAssignRhythms)
        {
            <tr>
                <td>
                    <p class="red-color">این مورد شامل بیش از یک قطعه شعر یا دارای پاراگراف نثر است و امکان انتساب وزن به آن وجود ندارد.</p>
                </td>
            </tr>
        }
        <tr id="rhythms-section">
            <td>
                وزن فعلی:
            </td>
        </tr>
        <tr>
            <td>
                <p id="rhythm-old">@(Model.GanjoorMetre1 == null ? "" : Model.GanjoorMetre1.Rhythm)</p>
            </td>
        </tr>
        <tr>
            <td>
                وزن ویراستهٔ من:
            </td>
        </tr>
        <tr>
            <td>
                <label for="select-search">جستجوی وزن:</label><br />
                <input type="text" id="select-search" value="" oninput="doSearchInRhythmsCombo('select-search', 'rhythm-new')" list="inputRhythms" autocomplete="off" size="50" />
                <datalist id="inputRhythms">
                    @if (Model.RhythmsByVerseCount != null)
                        @foreach (var rhythm in Model.RhythmsByVerseCount)
                        {
                            <option value="@rhythm.Rhythm">@rhythm.Rhythm</option>
                        }
                </datalist>

            </td>
        </tr>
        <tr>
            <td>
                <label for="rhythm-new">وزن انتخاب شده:</label>
                <br />
                <select id="rhythm-new" name="rhythm-new">
                    @foreach (var rhythm in Model.RhythmsAlphabetically)
                    {
                        if (Model.MyLastEdit != null && Model.MyLastEdit.Rhythm == rhythm.Rhythm)
                        {
                            <option value="@rhythm.Rhythm" selected>@rhythm.Rhythm</option>
                        }
                        else
                        {
                            if (Model.GanjoorMetre1 != null && Model.GanjoorMetre1.Rhythm == rhythm.Rhythm)
                            {
                                <option value="@rhythm.Rhythm" selected>@rhythm.Rhythm</option>
                            }
                            else
                            {
                                <option value="@rhythm.Rhythm">@rhythm.Rhythm</option>
                            }

                        }

                    }
                </select>
                <a role="button" onclick="resetRhythm('rhythm-new')" class="pagebutton">پاک کردن وزن</a>
                <br />
                <script>
                    function newRhythm() {
                        var rhythm = prompt("پیشنهاد وزن جدید", "");
                        if (rhythm != null) {
                            var select = document.getElementById('rhythm-new');
                            var options = select.options;
                            for (let i = 0; i < options.length; i++) {
                                if (options[i].value == rhythm) {
                                    alert('وزن پیشنهادی تکراری است.');
                                    return;
                                }
                            }
                            var opt = document.createElement('option');
                            opt.value = rhythm;
                            opt.innerHTML = rhythm;
                            select.appendChild(opt);

                            var opt2 = document.createElement('option');
                            opt2.value = rhythm;
                            opt2.innerHTML = rhythm;
                            document.getElementById('rhythm-new2').appendChild(opt2);

                            alert('وزن پیشنهادی به انتهای لیست وزن‌ها اضافه شده. لطفاً از لیست آن را انتخاب کنید.');
                        }
                    }
                </script>
                <a role="button" onclick="newRhythm()" class="pagebutton">پیشنهاد وزن جدید</a>
            </td>
        </tr>

        <tr>
            <td>
                وزن دوم (شعرهای چندوزنی):
            </td>
        </tr>
        <tr>
            <td>
                <p id="rhythm-old2">@(Model.GanjoorMetre2 == null ? "" : Model.GanjoorMetre2.Rhythm)</p>
            </td>
        </tr>
        <tr>
            <td>
                وزن ویراستهٔ من (دوم):
            </td>
        </tr>
        <tr>
            <td>
                <label for="select-search2">جستجوی وزن (دوم):</label><br />
                <input type="text" id="select-search2" value="" oninput="doSearchInRhythmsCombo('select-search2', 'rhythm-new2')" list="inputRhythms" autocomplete="off" size="50" />
                <datalist id="inputRhythms2">
                    @if (Model.RhythmsByVerseCount != null)
                        @foreach (var rhythm in Model.RhythmsByVerseCount)
                        {
                            <option value="@rhythm.Rhythm">@rhythm.Rhythm</option>
                        }
                </datalist>

            </td>
        </tr>
        <tr>
            <td>
                <label for="rhythm-new2">وزن (دوم) انتخاب شده:</label><br /><select id="rhythm-new2" name="rhythm-new2">
                    @foreach (var rhythm in Model.RhythmsAlphabetically)
                    {
                        if (Model.MyLastEdit != null && Model.MyLastEdit.Rhythm2 == rhythm.Rhythm)
                        {
                            <option value="@rhythm.Rhythm" selected>@rhythm.Rhythm</option>
                        }
                        else
                        {
                            if (Model.GanjoorMetre2 != null && Model.GanjoorMetre2.Rhythm == rhythm.Rhythm)
                            {
                                <option value="@rhythm.Rhythm" selected>@rhythm.Rhythm</option>
                            }
                            else
                            {
                                <option value="@rhythm.Rhythm">@rhythm.Rhythm</option>
                            }

                        }

                    }
                </select>
                <a role="button" onclick="resetRhythm('rhythm-new2')" class="pagebutton">پاک کردن وزن</a>
            </td>
        </tr>


        <tr>
            <td>
                توضیح این ویرایش:
            </td>
        </tr>

        <tr>
            <td>
                @if (Model.MyLastEdit != null && !string.IsNullOrEmpty(Model.MyLastEdit.Note))
                {
                    <input type="text" id="note" name="note" value="@Model.MyLastEdit.Note" size="50" />
                }
                else
                {
                    <input type="text" id="note" name="note" value="" size="50" />
                }
            </td>
        </tr>



        @if (Model.PageInformation.Poem.Sections.Count(s => s.SectionType == RMuseum.Models.Ganjoor.PoemSectionType.WholePoem && s.VerseType == RMuseum.Models.Ganjoor.VersePoemSectionType.First) > 1)
        {
            <tr>
                <td>
                    قطعات:
                </td>
            </tr>
            <tr>
                <td>
                    <table>
                        @foreach (var poemSetion in Model.PageInformation.Poem.Sections.Where(s => s.SectionType == RMuseum.Models.Ganjoor.PoemSectionType.WholePoem && s.VerseType == RMuseum.Models.Ganjoor.VersePoemSectionType.First).ToList())
                        {
                            <tr>
                                <td>
                                    <a href="/User/Section?poemId=@poemSetion.PoemId&index=@poemSetion.Index">
                                        قطعهٔ @(poemSetion.Number.ToPersianNumbers()):
                                    </a>
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.Raw(poemSetion.HtmlText)
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    وزن: @(poemSetion.GanjoorMetre == null ? "تعیین نشده" : poemSetion.GanjoorMetre.Rhythm )
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    <hr />
                                </td>
                            </tr>
                        }
                    </table>
                </td>
            </tr>
        }
        else
       if (Model.PageInformation.Poem.Sections.Count(s => s.SectionType == RMuseum.Models.Ganjoor.PoemSectionType.WholePoem && s.VerseType == RMuseum.Models.Ganjoor.VersePoemSectionType.First) == 1)
       {
           foreach (var poemSetion in Model.PageInformation.Poem.Sections.Where(s => s.SectionType == RMuseum.Models.Ganjoor.PoemSectionType.WholePoem && s.VerseType == RMuseum.Models.Ganjoor.VersePoemSectionType.First).ToList())
            {
                <tr>
                    <td>
                        <a href="/User/Section?poemId=@poemSetion.PoemId&index=@poemSetion.Index" role="button" class="pagebutton">
                            شکستن شعر به قطعات مجزا
                        </a>
                    </td>
                </tr>
            }
       }

        <tr id="poem-sections">
            <td>
                <a href="/User/AllPoemSections?id=@Model.PageInformation.Id" class="pagebutton">
                    همهٔ قطعات شعر
                </a>
            </td>
        </tr>




        @if (Model.PageInformation.Poem.Previous != null)
        {
            <tr>
                <td>
                    @if (Model.ShowAdminOps)
                    {
                        <a href="/User/Editor?admin=1&id=@Model.PageInformation.Poem.Previous.Id" role="button" class="pagebutton">ویرایش شعر قبل</a>
                    }
                    else
                    {
                        <a href="/User/Editor?id=@Model.PageInformation.Poem.Previous.Id" role="button" class="pagebutton">ویرایش شعر قبل</a>
                    }
                </td>
            </tr>
        }
        @if (Model.PageInformation.Poem.Next != null)
        {
            <tr>
                <td>
                    @if (Model.ShowAdminOps)
                    {
                        <a href="/User/Editor?admin=1&id=@Model.PageInformation.Poem.Next.Id" role="button" class="pagebutton">ویرایش شعر بعد</a>
                    }
                    else
                    {
                        <a href="/User/Editor?id=@Model.PageInformation.Poem.Next.Id" role="button" class="pagebutton">ویرایش شعر بعد</a>
                    }
                </td>
            </tr>
        }

        @if (Model.ShowAdminOps && Model.GanjoorMetre1 != null && !string.IsNullOrEmpty(Model.RhymeLetters))
        {
            <tr>
                <td><a role="button" onclick="updateRelatedSections(@Model.GanjoorMetre1.Id, '@Model.RhymeLetters')" class="pagebutton">بازسازی فهرست اشعار هم‌آهنگ با وزن اول</a></td>
            </tr>
        }

        @if (Model.ShowAdminOps && Model.GanjoorMetre2 != null && !string.IsNullOrEmpty(Model.RhymeLetters))
        {
            <tr>
                <td><a role="button" onclick="updateRelatedSections(@Model.GanjoorMetre2.Id, '@Model.RhymeLetters')" class="pagebutton">بازسازی فهرست اشعار هم‌آهنگ با وزن دوم</a></td>
            </tr>
        }

        @if (Model.ShowAdminOps)
        {
            <tr>
                <td>برای حذف شعر از قسمت مدیریت بخش اقدام کنید.</td>
            </tr>
        }

        @if (Model.CanEdit && !Model.ShowAdminOps)
        {
            <tr>
                <td><a role="button" href="/User/Editor?id=@Model.PageInformation.Id&admin=1" class="pagebutton">امکانات مدیریتی</a></td>
            </tr>
        }

        <tr>
            <td class="td-button-container">
                <a role="button" id="savecorrections" class="editor-button background-green" onclick="savePoemCorrections(@Model.PageInformation.Poem.Id, @Model.PageInformation.Poem.Verses.Length)">ذخیره</a>
            </td>
        </tr>

        <tr>
            <td><p id="saving">&nbsp;</p></td>
        </tr>

        <tr>
            <td class="td-button-container">
                <a role="button" href="#" class="editor-button background-gray">لغزش به بالای صفحه</a>
            </td>
        </tr>
    </table>



}